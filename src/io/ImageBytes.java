package io;

import java.util.HashMap;

public class ImageBytes{
	
	public static boolean equals(byte[] b1, byte[] b2){
		
		if(b1.length != b2.length){
			return false;
		}
		else{
			for(int i = 0; i < b1.length; i++){
				if(b1[i] != b2[i]){
					return false;
				}
			}
		}
		return true;
	}
	
	public static final byte[] ACTIVE_OPPONENT = {-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 2, 0, 0, 0, 2, 8, 2, 0, 0, 0, -3, -44, -102, 115, 0, 0, 0, 22, 73, 68, 65, 84, 120, -38, 99, -56, 56, -16, 83, -63, 57, -118, 33, -29, -64, 47, 5, 91, 127, 0, 42, -75, 5, -83, -47, -88, 127, 51, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	public static final byte[] BLANKSPOT = {-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 4, 0, 0, 0, 4, 8, 2, 0, 0, 0, 38, -109, 9, 41, 0, 0, 0, 25, 73, 68, 65, 84, 120, -38, 99, -88, -87, 111, -127, 35, -122, -22, -70, 102, 56, 66, -27, 84, -42, 52, -62, 17, 0, 106, -40, 23, -75, 108, -95, 3, 37, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	public static final byte[] BUTTON = {-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 2, 0, 0, 0, 2, 8, 2, 0, 0, 0, -3, -44, -102, 115, 0, 0, 0, 20, 73, 68, 65, 84, 120, -38, 99, -8, -1, -1, -1, -105, -97, 127, 24, 64, -44, -113, 63, 0, 82, -52, 11, -52, 34, 119, 103, -73, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	public static final byte[] CHECK_AVAILABLE = {-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 2, 0, 0, 0, 2, 8, 2, 0, 0, 0, -3, -44, -102, 115, 0, 0, 0, 18, 73, 68, 65, 84, 120, -38, 99, -120, -40, -85, -105, -74, 87, -113, 1, 66, 1, 0, 36, -64, 5, 41, 59, 89, 28, -105, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	public static final byte[] PLAYER_TURN = {-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 2, 0, 0, 0, 2, 8, 2, 0, 0, 0, -3, -44, -102, 115, 0, 0, 0, 16, 73, 68, 65, 84, 120, -38, 99, 96, 109, -70, 10, 68, 12, 16, 10, 0, 34, -34, 5, 113, 38, 44, -10, -93, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};

	public static final byte[] BANKROLL_DIGIT_0 = {-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 10, 0, 0, 0, 6, 8, 2, 0, 0, 0, 117, -110, -104, -111, 0, 0, 0, 90, 73, 68, 65, 84, 120, -38, 99, 96, 109, -70, 10, 68, 44, 11, 67, -1, -36, 97, -124, -93, 45, 11, -81, 66, -60, 25, -128, -40, 122, -93, 33, 88, 52, 52, 13, -88, -82, 105, -58, -106, 59, 12, 64, -18, -115, -115, -37, 64, -46, 112, -2, -97, 3, 51, 32, 58, -46, 14, 48, -64, 85, 51, -80, 76, -86, -72, -127, -92, 28, -55, 48, -61, -66, 73, 64, 105, -104, -83, 112, 105, -72, 8, -48, 5, 12, -56, 28, 76, 105, 0, 86, -87, 98, 54, 105, 126, 106, 4, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	public static final byte[] BANKROLL_DIGIT_1 = {-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 10, 0, 0, 0, 6, 8, 2, 0, 0, 0, 117, -110, -104, -111, 0, 0, 0, 43, 73, 68, 65, 84, 120, -38, 99, 96, 109, -70, 10, 65, 44, 77, 51, -74, -36, 97, -8, 115, -121, -15, -49, -127, 25, 112, 65, 6, -112, -60, -62, 80, -112, 40, 28, -95, 73, 19, -48, 77, 51, 105, 0, 39, -118, 91, 50, -124, 121, 117, 59, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	public static final byte[] BANKROLL_DIGIT_2 = {-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 10, 0, 0, 0, 6, 8, 2, 0, 0, 0, 117, -110, -104, -111, 0, 0, 0, 84, 73, 68, 65, 84, 120, -38, 99, 96, 109, -70, -54, 50, -87, -30, -58, 29, -122, 63, 119, 24, -31, 104, -53, -62, -85, 64, 113, 32, 98, 0, -30, -76, 3, 64, -71, -48, 52, 48, 31, -82, -12, -58, -58, 109, 112, 105, -88, 28, 72, -70, 105, 91, -33, 57, -80, 73, -25, 42, -84, 33, -46, -56, 8, 33, 13, 54, 15, 83, 122, -58, -106, 59, -72, -91, -63, -18, 0, 59, -16, -64, 12, 32, 23, 0, 47, -91, 93, -84, 69, -102, 119, 9, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	public static final byte[] BANKROLL_DIGIT_3 = {-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 10, 0, 0, 0, 6, 8, 2, 0, 0, 0, 117, -110, -104, -111, 0, 0, 0, 93, 73, 68, 65, 84, 120, -38, 99, 96, 109, -70, 106, -67, -47, -16, -49, 29, 70, 100, 116, 99, -29, 54, -96, 56, 16, 49, -80, 52, -51, -40, 114, -121, -31, -49, -71, 10, 107, 48, -97, 101, 82, -59, 13, 32, 23, -88, -24, -64, 12, -104, 52, -104, 5, 65, 44, 77, -37, -6, -50, -127, -91, -17, -124, -90, 1, -91, -31, 18, -24, -46, 96, -13, 48, -92, 23, -122, 66, -84, -33, -78, 16, 108, 55, -122, -103, 64, 100, -40, 55, 9, -86, 26, 0, 125, 83, 94, 55, -97, 109, 47, 109, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	public static final byte[] BANKROLL_DIGIT_4 = {-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 10, 0, 0, 0, 6, 8, 2, 0, 0, 0, 117, -110, -104, -111, 0, 0, 0, 79, 73, 68, 65, 84, 120, -38, 99, 96, 109, -70, 10, 71, 44, 77, 51, -74, -36, 97, -8, 115, -121, -15, -49, 29, -61, -66, 73, 32, 17, 6, 100, -23, -76, 3, 16, 57, 108, -46, -42, 27, 13, 97, 114, 24, -46, 44, -109, 42, 110, -128, -116, 13, -19, -125, 42, 66, -110, 102, 105, -38, -42, 119, -114, 1, 34, 100, -115, 41, 13, -79, -14, -58, -58, 109, 72, 86, 64, -91, 1, 29, -7, 95, -36, 3, -16, -23, 30, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	public static final byte[] BANKROLL_DIGIT_5 = {-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 10, 0, 0, 0, 6, 8, 2, 0, 0, 0, 117, -110, -104, -111, 0, 0, 0, 53, 73, 68, 65, 84, 120, -38, 99, 96, 109, -70, -102, 118, -128, -31, -49, 29, 70, 116, 116, -82, -62, -70, -23, 42, 3, -110, 116, 104, 90, -45, 85, 86, 84, 68, 61, 105, 36, 116, 96, 6, 66, 26, 25, -79, 76, -86, -72, 113, -121, 1, -18, 52, 0, -91, -11, 94, -90, -96, -46, 67, -68, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	public static final byte[] BANKROLL_DIGIT_6 = {-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 10, 0, 0, 0, 6, 8, 2, 0, 0, 0, 117, -110, -104, -111, 0, 0, 0, 89, 73, 68, 65, 84, 120, -38, 99, 96, 109, -70, 10, 65, 44, -109, 42, 110, -36, 97, -8, 115, -121, 17, -126, 110, 108, -36, 6, 20, 100, -128, -56, -91, 29, -128, 72, -124, -90, -63, 84, 67, 16, 72, -102, 101, 97, 40, 88, -50, -80, 111, 18, -118, 28, 72, -102, -91, 105, 91, -33, 57, -80, -42, 115, 21, -42, 77, 88, -92, 103, 108, 65, -78, 18, -122, -96, -74, 48, 32, 92, 116, 96, 6, -56, 34, -72, 97, 96, 21, 0, -52, -7, 94, -17, 100, -81, 58, 28, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	public static final byte[] BANKROLL_DIGIT_7 = {-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 10, 0, 0, 0, 6, 8, 2, 0, 0, 0, 117, -110, -104, -111, 0, 0, 0, 69, 73, 68, 65, 84, 120, -38, 99, 96, -103, 84, 113, -29, 14, -61, -97, 59, -116, -104, 104, -53, -62, -85, 12, -84, 77, 87, -111, 17, 75, -45, -74, -66, 115, 16, -43, -122, 125, -109, 48, -91, 23, -122, 66, 117, 31, -104, 1, -28, 50, -32, -47, -118, 33, 13, -45, 122, 99, -29, 54, -120, 8, 3, 54, -83, -95, 105, 48, 65, 0, -118, -41, 93, -76, -82, -30, -100, 114, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	public static final byte[] BANKROLL_DIGIT_8 = {-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 10, 0, 0, 0, 6, 8, 2, 0, 0, 0, 117, -110, -104, -111, 0, 0, 0, 96, 73, 68, 65, 84, 120, -38, 99, 96, 109, -70, 10, 68, 44, -109, 42, 110, -36, 97, -8, 115, -121, 17, -126, 110, 108, -36, 6, 17, 103, 0, 98, -21, -115, -122, 96, 81, -61, -66, 73, 87, 89, -102, -74, -11, -99, 3, -85, 59, 87, 97, 13, -108, 102, 105, -102, -79, 5, -94, -17, -64, 12, -120, 14, 100, -43, -124, -92, -127, -4, -76, 3, 16, 91, 67, -45, -128, -114, -128, -87, -34, -78, 16, 102, 55, -56, 105, 11, 67, -31, -18, -126, 107, 5, -118, 3, 0, 113, 6, 98, 98, 54, 64, -101, -28, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	public static final byte[] BANKROLL_DIGIT_9 = {-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 10, 0, 0, 0, 6, 8, 2, 0, 0, 0, 117, -110, -104, -111, 0, 0, 0, 88, 73, 68, 65, 84, 120, -38, 99, 96, 109, -70, 10, 68, -42, 27, 13, -1, -36, 97, -124, 33, -61, -66, 73, 87, 33, -30, 12, 64, -100, 118, -128, 1, 36, 122, -82, -62, -70, -23, 42, -53, -92, -118, 27, 119, 64, -36, 45, 11, -63, -46, 112, -2, -115, -115, -37, 32, 58, -112, 85, 51, -80, 44, 12, -123, -104, 9, 81, -114, 100, 17, -56, 10, -124, 52, 92, 55, -86, 116, -45, -116, 45, 119, 16, -90, -95, 73, 3, 0, 102, 82, 98, -112, -109, 45, -124, 91, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};

	public static final byte[] TO_CALL_0 = {-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 10, 0, 0, 0, 11, 8, 2, 0, 0, 0, -55, 12, -117, 79, 0, 0, 0, 86, 73, 68, 65, 84, 120, -38, 99, 96, -128, 0, 111, -59, -76, -67, 122, 112, -28, -23, -51, -128, 0, -30, 89, -22, 96, 81, 69, 13, 16, 79, -40, 19, -84, 34, 34, -117, 27, 34, 11, -27, -89, -75, 11, 67, -8, 26, -19, 122, 72, -86, -75, 37, 35, 80, -107, -61, 12, 83, -73, -44, 70, -78, 21, 46, 13, 23, 1, -69, 0, -123, -125, 91, 26, -121, 110, 2, 118, 19, 112, 57, 33, 127, -29, 11, 53, 0, -121, 26, 77, 87, 27, -98, 80, -118, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	public static final byte[] TO_CALL_1 = {-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 10, 0, 0, 0, 11, 8, 2, 0, 0, 0, -55, 12, -117, 79, 0, 0, 0, 43, 73, 68, 65, 84, 120, -38, 99, 96, 64, 0, 97, -49, -67, 122, 105, 64, -44, 46, -52, -128, 2, -68, 21, -45, 32, 18, -40, -91, 9, -24, 30, -74, -46, 104, -63, 2, 65, -117, 36, -59, 25, 24, 0, 42, 79, 48, -109, -40, -64, 110, 65, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	public static final byte[] TO_CALL_2 = {-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 10, 0, 0, 0, 11, 8, 2, 0, 0, 0, -55, 12, -117, 79, 0, 0, 0, 95, 73, 68, 65, 84, 120, -38, 99, 96, 0, 2, 109, -55, -120, -67, 122, 105, 72, -56, -45, -101, 1, 1, 52, -38, -127, 66, -118, 26, 16, 14, 76, 105, 68, 22, 55, 92, 26, 38, 7, 2, -36, -106, -117, -64, 102, 44, -110, 20, 103, -64, 2, 96, -46, 123, -111, -11, 32, -128, -80, -25, 94, -36, -46, 96, 119, -128, 81, -69, 48, -122, -92, -73, 34, -52, -15, -22, -106, -38, 104, 114, 72, -34, 67, -15, 24, 37, 114, 8, -97, -96, 35, 96, -56, 0, 0, -87, 13, 60, 66, -103, -106, 73, 79, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	public static final byte[] TO_CALL_3 = {-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 10, 0, 0, 0, 11, 8, 2, 0, 0, 0, -55, 12, -117, 79, 0, 0, 0, 103, 73, 68, 65, 84, 120, -38, 99, 96, 96, 96, 16, -49, 82, 79, -37, -85, -121, -116, 34, -78, -72, 25, 96, 64, -40, 19, 40, -76, 72, 82, 28, -62, -45, -106, -116, -128, 40, 106, 23, -122, 73, -61, 88, 96, -64, 109, -71, 8, 98, -122, -94, 6, 3, 22, 0, -109, -122, -101, -121, 2, -68, 21, 33, -42, 123, 122, 99, -43, 4, 66, -22, -106, -38, 12, -72, 0, -40, -91, 56, 13, 71, -8, 19, 98, -122, -73, 34, -78, 47, -79, 72, 35, -5, 18, -45, -33, -56, -114, -46, 67, 115, 54, 0, -125, -14, 58, -11, -96, 71, -15, -104, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	public static final byte[] TO_CALL_4 = {-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 10, 0, 0, 0, 11, 8, 2, 0, 0, 0, -55, 12, -117, 79, 0, 0, 0, 88, 73, 68, 65, 84, 120, -38, 99, 96, 64, 1, -62, -98, 123, -11, -46, 64, 72, -35, 82, -101, 1, 29, 104, -76, 67, -28, -80, 73, -117, 103, -87, -61, -28, 48, -91, -75, 37, 35, 64, -94, -118, -106, 80, 69, 40, -46, -36, -106, -117, -96, 66, -30, -104, -46, 16, 43, 35, -78, -72, -111, -84, -128, 75, 123, 43, -126, -8, -19, -62, -88, 46, -128, 73, 35, -71, 22, 3, -63, -12, 96, -70, 31, -101, -65, 73, -106, 6, 0, -112, 101, 65, 26, 37, 83, -90, -111, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	public static final byte[] TO_CALL_5 = {-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 10, 0, 0, 0, 11, 8, 2, 0, 0, 0, -55, 12, -117, 79, 0, 0, 0, 81, 73, 68, 65, 84, 120, -38, 99, 96, 96, 96, -48, 104, -41, 75, -37, -117, -127, 22, 73, -118, 51, -128, 1, 76, 90, 81, -125, 1, 27, -96, -114, 52, 18, 106, 23, 102, -64, 14, -76, 37, 35, -48, -100, -122, -61, 48, 117, 75, 109, 108, -46, -30, 89, -22, 72, -46, -38, -110, -98, 89, -36, -72, 93, 10, -79, 12, -18, 22, 111, 69, -120, -21, 34, -32, 122, 48, 92, -114, -80, 21, 0, -40, 16, 59, -100, 10, -99, -34, 43, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	public static final byte[] TO_CALL_6 = {-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 10, 0, 0, 0, 11, 8, 2, 0, 0, 0, -55, 12, -117, 79, 0, 0, 0, 104, 73, 68, 65, 84, 120, -38, 99, 96, -128, 3, 109, -55, -120, -67, 122, 105, 48, 20, -111, -59, -115, -112, -46, 104, -121, -120, 42, 106, 48, 96, 2, 111, 69, -80, -100, -70, -91, 54, 22, 73, 110, -53, 69, 96, -83, -117, 36, -59, -79, -56, 50, 8, 123, 34, 89, 9, 67, 112, 91, -32, 46, 106, 23, 70, 49, 12, -86, 2, 93, 26, -18, 20, 61, 79, 111, 100, -61, 49, -92, 33, 126, 67, 119, -102, 120, -106, 58, -86, 71, 96, -26, -125, 77, -125, -87, -122, 27, -122, -23, 126, 120, -112, 1, 0, -124, -51, 68, -28, 13, 26, -22, -51, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	public static final byte[] TO_CALL_7 = {-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 10, 0, 0, 0, 11, 8, 2, 0, 0, 0, -55, 12, -117, 79, 0, 0, 0, 67, 73, 68, 65, 84, 120, -38, 99, 96, -48, -106, -116, -40, -85, -105, -122, 13, 121, 122, 51, 96, 2, 110, -53, 69, 16, 105, 117, 75, 109, 76, 89, 111, 69, -88, -18, 118, 97, 114, -75, 70, 100, 113, -29, -47, -86, -88, -63, 64, -94, 86, 97, -49, -67, -72, -75, -118, 103, -87, -109, -85, 85, -93, 93, 15, -105, 86, 0, 107, -58, 51, 121, 46, -117, 67, -123, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	public static final byte[] TO_CALL_8 = {-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 10, 0, 0, 0, 11, 8, 2, 0, 0, 0, -55, 12, -117, 79, 0, 0, 0, 107, 73, 68, 65, 84, 120, -38, 99, 96, -128, 0, 109, -55, -120, -67, 122, 105, 48, 20, -111, -59, -51, 0, 7, -30, 89, -22, 96, 81, 117, 75, 109, 32, -113, -37, 114, 17, 88, -47, 34, 73, 113, -80, -84, -80, 39, 68, 83, -69, 48, 54, -43, -124, -92, 25, 52, -38, 33, 86, 42, 106, 32, -87, -10, -12, 102, 64, 2, -34, -118, 105, 72, 78, 67, 104, 69, -72, 5, 106, 56, -52, 46, -88, 10, -104, 62, -124, 105, 48, 79, -126, -67, 71, 64, 26, 110, 26, -52, -93, -88, 46, 69, 17, -126, 33, -104, 39, 1, -58, 69, 78, -14, -81, -114, -124, -23, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	public static final byte[] TO_CALL_9 = {-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 10, 0, 0, 0, 11, 8, 2, 0, 0, 0, -55, 12, -117, 79, 0, 0, 0, 101, 73, 68, 65, 84, 120, -38, 99, 96, 0, 3, -15, 44, -11, -76, -67, 122, 48, -92, 110, -87, -51, -128, 0, 26, -19, 96, -47, 69, -110, -30, 64, -114, -74, 100, 4, 88, -111, -89, 55, 68, 18, -58, -113, -56, -30, -58, -94, -102, -63, 91, 49, 13, 69, 57, -36, 34, -120, 21, 48, 105, -72, 110, 84, 105, 6, 97, -49, -67, -56, -90, -95, 75, 35, -87, 64, 65, -88, -18, -57, -18, 17, 12, 0, 53, 9, -18, 20, 100, -64, 109, -71, 8, -84, -75, 93, 24, 33, -122, 39, -56, 0, 22, 28, 68, 108, 90, -58, -77, -78, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	
	private static final byte[] ALL_IN = {-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, -120, 0, 0, 0, 10, 8, 2, 0, 0, 0, -32, -96, -127, -42, 0, 0, 0, 97, 73, 68, 65, 84, 120, -38, -19, -56, -95, 10, -128, 48, 0, -124, -31, 11, 98, -80, -103, 86, 12, 67, 28, 76, 16, 38, -109, -55, 112, -47, -25, -15, -3, -93, -118, -35, 126, -116, -5, -8, -81, 28, 74, 41, -121, -16, 65, -50, 121, 23, 62, 72, 41, 109, -62, 7, 49, -58, 85, -8, 32, -124, -80, 8, 31, -68, -101, -123, 15, -68, -9, -109, -16, -127, 115, 110, 20, 62, -80, -42, 14, -62, 7, -58, -104, -98, -37, -43, -30, -58, 87, -45, -99, 63, 79, 125, 30, 13, 43, -107, 73, 57, 95, 4, -118, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	private static final byte[] BET = {-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, -120, 0, 0, 0, 10, 8, 2, 0, 0, 0, -32, -96, -127, -42, 0, 0, 0, 81, 73, 68, 65, 84, 120, -38, -19, -61, -63, 9, -128, 64, 12, 4, -64, 109, -63, 87, 62, 62, 14, -15, -32, 4, 33, 18, 57, 9, -90, -1, -66, -76, -116, 125, -20, -64, -96, -86, 94, -31, -125, -52, 124, -124, 15, -26, -100, -73, -16, 65, 68, 92, -62, 7, -18, 126, 10, 31, -4, 15, -31, -125, 49, -58, 46, 124, -48, 123, -33, -124, 15, 90, 107, -85, -16, -127, -103, 45, -62, -25, 3, -45, -87, -113, -127, -69, -29, 118, -127, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	private static final byte[] BIG_BLIND = {-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, -120, 0, 0, 0, 10, 8, 2, 0, 0, 0, -32, -96, -127, -42, 0, 0, 0, 81, 73, 68, 65, 84, 120, -38, -19, -61, -63, 9, -128, 64, 12, 4, -64, 109, -63, 87, 62, 62, 14, -15, -32, 4, 33, 18, 57, 9, -90, -1, -66, -76, -116, 125, -20, -64, -96, -86, 94, -31, -125, -52, 124, -124, 15, -26, -100, -73, -16, 65, 68, 92, -62, 7, -18, 126, 10, 31, -4, 15, -31, -125, 49, -58, 46, 124, -48, 123, -33, -124, 15, 90, 107, -85, -16, -127, -103, 45, -62, -25, 3, -45, -87, -113, -127, -69, -29, 118, -127, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	private static final byte[] CALL = {-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, -120, 0, 0, 0, 10, 8, 2, 0, 0, 0, -32, -96, -127, -42, 0, 0, 0, 99, 73, 68, 65, 84, 120, -38, -19, -56, -63, 9, -128, 48, 0, 67, -47, -84, -32, -87, 23, -63, 34, 22, 42, 20, -86, -107, 74, -79, -5, -72, -116, 107, 56, -121, -77, 41, -34, -67, 7, -55, -29, -25, 18, -44, 90, 55, -31, -125, 82, -54, 42, 124, -112, 115, 94, -124, 15, 82, 74, -109, -16, 65, -116, 49, 8, 31, 60, 27, -123, 15, -68, -9, -125, -16, -127, 115, -82, 23, 62, -80, -42, -74, -62, 7, -58, -104, -26, -41, -26, 35, -20, -41, -37, -39, -11, 31, 15, -95, 27, 9, 51, -105, 109, 88, -56, -87, -102, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	private static final byte[] CHECK = {-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, -120, 0, 0, 0, 10, 8, 2, 0, 0, 0, -32, -96, -127, -42, 0, 0, 0, 102, 73, 68, 65, 84, 120, -38, -19, -49, -63, 9, -128, 48, 0, 3, -64, -84, -32, -85, 15, 5, 75, -79, 80, 65, -88, 86, 42, -59, -18, -29, 50, -82, -31, 28, -50, -90, 56, -124, -28, -111, 35, 121, -121, -96, -42, -70, 11, 31, -108, 82, 54, -31, -125, -100, -13, 42, 124, -112, 82, -102, -123, 15, 98, -116, -109, -16, -63, -37, 81, -8, 32, -124, 48, 8, 31, 120, -17, -99, -16, -127, -75, -74, 19, 62, 48, -58, 52, -108, -106, 115, 58, -18, 47, 87, -17, 126, -37, 58, 91, -110, -5, 15, -58, -97, -105, 63, 81, 123, 28, 90, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	private static final byte[] RAISE = {-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, -120, 0, 0, 0, 10, 8, 2, 0, 0, 0, -32, -96, -127, -42, 0, 0, 0, 81, 73, 68, 65, 84, 120, -38, -19, -61, -63, 9, -128, 64, 12, 4, -64, 109, -63, 87, 62, 62, 14, -15, -32, 4, 33, 18, 57, 9, -90, -1, -66, -76, -116, 125, -20, -64, -96, -86, 94, -31, -125, -52, 124, -124, 15, -26, -100, -73, -16, 65, 68, 92, -62, 7, -18, 126, 10, 31, -4, 15, -31, -125, 49, -58, 46, 124, -48, 123, -33, -124, 15, 90, 107, -85, -16, -127, -103, 45, -62, -25, 3, -45, -87, -113, -127, -69, -29, 118, -127, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	private static final byte[] SMALL_BLIND = {-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, -120, 0, 0, 0, 10, 8, 2, 0, 0, 0, -32, -96, -127, -42, 0, 0, 0, 81, 73, 68, 65, 84, 120, -38, -19, -61, -63, 9, -128, 64, 12, 4, -64, 109, -63, 87, 62, 62, 14, -15, -32, 4, 33, 18, 57, 9, -90, -1, -66, -76, -116, 125, -20, -64, -96, -86, 94, -31, -125, -52, 124, -124, 15, -26, -100, -73, -16, 65, 68, 92, -62, 7, -18, 126, 10, 31, -4, 15, -31, -125, 49, -58, 46, 124, -48, 123, -33, -124, 15, 90, 107, -85, -16, -127, -103, 45, -62, -25, 3, -45, -87, -113, -127, -69, -29, 118, -127, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	public static final byte[][] POST_ACTION_LABELS = new byte[][]{ALL_IN, BET, BIG_BLIND, CALL, CHECK, SMALL_BLIND, RAISE};

	public static final byte[] GREEN_BAR = {-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 2, 0, 0, 0, 2, 8, 2, 0, 0, 0, -3, -44, -102, 115, 0, 0, 0, 16, 73, 68, 65, 84, 120, -38, 99, 72, -37, -89, 3, 68, 12, 16, 10, 0, 37, -74, 5, 65, 48, 63, -94, -76, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	public static final byte[] ORANGE_BAR = {-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 2, 0, 0, 0, 2, 8, 2, 0, 0, 0, -3, -44, -102, 115, 0, 0, 0, 16, 73, 68, 65, 84, 120, -38, 99, -8, 87, -49, 12, 68, 12, 16, 10, 0, 45, -6, 6, 1, 8, 56, 42, 5, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	public static final byte[] RED_BAR = {-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 2, 0, 0, 0, 2, 8, 2, 0, 0, 0, -3, -44, -102, 115, 0, 0, 0, 16, 73, 68, 65, 84, 120, -38, 99, -8, -49, -64, 0, 68, 12, 16, 10, 0, 31, -18, 3, -3, 99, 94, -69, 91, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};

	/**********************************************************************************************************
	 **********************************************************************************************************
	 **											CARDS														 **
	 **********************************************************************************************************
	 *********************************************************************************************************/

	public static final byte[] C2 = getC2();
	public static final byte[] C3 = getC3();
	public static final byte[] C4 = getC4();
	public static final byte[] C5 = getC5();
	public static final byte[] C6 = getC6();
	public static final byte[] C7 = getC7();
	public static final byte[] C8 = getC8();
	public static final byte[] C9 = getC9();
	public static final byte[] CT = getCT();
	public static final byte[] CJ = getCJ();
	public static final byte[] CQ = getCQ();
	public static final byte[] CK = getCK();
	public static final byte[] CA = getCA();

	public static final byte[] D2 = getD2();
	public static final byte[] D3 = getD3();
	public static final byte[] D4 = getD4();
	public static final byte[] D5 = getD5();
	public static final byte[] D6 = getD6();
	public static final byte[] D7 = getD7();
	public static final byte[] D8 = getD8();
	public static final byte[] D9 = getD9();
	public static final byte[] DT = getDT();
	public static final byte[] DJ = getDJ();
	public static final byte[] DQ = getDQ();
	public static final byte[] DK = getDK();
	public static final byte[] DA = getDA();

	public static final byte[] H2 = getH2();
	public static final byte[] H3 = getH3();
	public static final byte[] H4 = getH4();
	public static final byte[] H5 = getH5();
	public static final byte[] H6 = getH6();
	public static final byte[] H7 = getH7();
	public static final byte[] H8 = getH8();
	public static final byte[] H9 = getH9();
	public static final byte[] HT = getHT();
	public static final byte[] HJ = getHJ();
	public static final byte[] HQ = getHQ();
	public static final byte[] HK = getHK();
	public static final byte[] HA = getHA();

	public static final byte[] S2 = getS2();
	public static final byte[] S3 = getS3();
	public static final byte[] S4 = getS4();
	public static final byte[] S5 = getS5();
	public static final byte[] S6 = getS6();
	public static final byte[] S7 = getS7();
	public static final byte[] S8 = getS8();
	public static final byte[] S9 = getS9();
	public static final byte[] ST = getST();
	public static final byte[] SJ = getSJ();
	public static final byte[] SQ = getSQ();
	public static final byte[] SK = getSK();
	public static final byte[] SA = getSA();
	
	public static final HashMap<byte[], String> ALL_CARDS = buildAllCards();
	
	private static HashMap<byte[], String> buildAllCards(){
		
		HashMap<byte[], String> map = new HashMap<>();

		map.put(C2, "C2"); map.put(C3, "C3"); map.put(C4, "C4"); map.put(C5, "C5");
		map.put(C6, "C6"); map.put(C7, "C7"); map.put(C8, "C8"); map.put(C9, "C9");
		map.put(CT, "CT"); map.put(CJ, "CJ"); map.put(CQ, "CQ"); map.put(CK, "CK");
		map.put(CA, "CA");
		map.put(D2, "D2"); map.put(D3, "D3"); map.put(D4, "D4"); map.put(D5, "D5");
		map.put(D6, "D6"); map.put(D7, "D7"); map.put(D8, "D8"); map.put(D9, "D9");
		map.put(DT, "DT"); map.put(DJ, "DJ"); map.put(DQ, "DQ"); map.put(DK, "DK");
		map.put(DA, "DA");
		map.put(H2, "H2"); map.put(H3, "H3"); map.put(H4, "H4"); map.put(H5, "H5");
		map.put(H6, "H6"); map.put(H7, "H7"); map.put(H8, "H8"); map.put(H9, "H9");
		map.put(HT, "HT"); map.put(HJ, "HJ"); map.put(HQ, "HQ"); map.put(HK, "HK");
		map.put(HA, "HA");
		map.put(S2, "S2"); map.put(S3, "S3"); map.put(S4, "S4"); map.put(S5, "S5");
		map.put(S6, "S6"); map.put(S7, "S7"); map.put(S8, "S8"); map.put(S9, "S9");
		map.put(ST, "ST"); map.put(SJ, "SJ"); map.put(SQ, "SQ"); map.put(SK, "SK");
		map.put(SA, "SA");
		
		return map;
	}
	
	 /*********************************************************************************************************
	 **											CLUBS														 **
	 *********************************************************************************************************/

	private static byte[] getC2(){
		return new byte[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 15, 0, 0, 0, 20, 8, 2, 0, 0, 0, -35, -91, -16, 69, 0, 0, 1, 59, 73, 68, 65, 84, 120, -38, -123, -110, -79, 74, 3, 65, 16, -122, -9, 41, -84, -20, 12, 8, 18, 65, -108, -108, 118, -38, -90, 76, 97, -87, -107, -123, 79, -32, 59, 92, 103, 105, 19, 20, -101, 84, 118, 22, 33, -92, 73, 33, 8, -79, 23, 109, -76, 14, -90, -117, -18, 49, 126, -21, 28, 127, -10, -30, 17, -105, -97, -67, -39, -39, 111, 103, 102, 119, 46, -12, 38, 7, -46, -23, -72, 55, 122, 25, -50, 23, -97, -91, -107, 111, 31, -81, -59, -92, 56, 121, -20, -28, 64, -112, 117, -7, 116, 1, 103, 49, -126, -102, 89, -102, 99, -68, -99, -10, 125, -73, 59, -34, 79, 52, 31, 68, 12, 15, 105, -39, 96, -119, 72, -24, 12, 10, 126, -120, 24, -42, 56, 98, -92, -74, 26, -115, 112, 121, 36, -54, -27, 48, -87, -16, 56, -1, -4, 62, 93, -46, -57, 15, 123, 8, 2, 47, -59, 96, -72, -121, 2, 84, -104, 123, 80, -112, 69, 60, 46, -86, 37, 82, 57, 53, -6, -16, 126, 87, 115, -66, 20, -115, -19, 10, -78, 86, 68, 30, -43, -3, 63, 13, -28, -9, -26, -71, -106, 116, 103, -48, -2, 43, -70, -88, 30, 113, 93, -7, 27, 104, -74, -43, 29, 50, -28, 91, -95, 125, -77, -109, -117, 116, -87, -87, -65, 79, -121, -63, 117, -13, -35, 26, -51, 105, -70, -93, -18, 115, -47, -107, 88, -119, 110, 93, 111, -5, -126, 11, 9, -91, 116, -9, -25, 115, -32, -29, 98, 91, 15, -52, 49, -7, 115, 85, 52, 73, 23, 95, -91, 30, -72, 17, 77, -12, -26, 85, 11, -51, -26, 51, 5, -122, -26, -105, -54, 117, -44, -17, 58, 86, -47, -74, 118, -16, -90, 21, -67, 81, 108, -83, -89, -65, 75, 59, -65, 59, 115, -20, 7, 121, -12, 19, -83, 108, -89, -39, -41, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	}
	
	private static byte[] getC3(){
		return new byte[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 15, 0, 0, 0, 20, 8, 2, 0, 0, 0, -35, -91, -16, 69, 0, 0, 1, 47, 73, 68, 65, 84, 120, -38, -107, -110, -79, 74, 3, 65, 16, -122, -9, 41, -84, -20, 12, 8, 18, 65, -108, -108, 118, -38, -90, 76, 97, 105, -17, 19, -92, -15, 9, -82, -77, -76, 9, -38, 89, 9, 22, 22, 34, 105, 82, 8, 66, -20, 69, 27, 99, 39, -63, 116, -22, 29, -25, -89, -1, -15, -17, -34, 18, 11, -61, -49, -20, 102, -26, -101, -71, -103, 97, -61, 96, -78, -125, 30, 94, -90, 85, 93, -43, -53, 126, -124, -60, -96, -16, 63, -70, 63, -34, 22, -67, 20, -83, -53, -110, 16, -116, 20, 116, -100, 79, 71, 120, -83, -25, -39, -109, 96, 62, 72, 40, -89, 51, -35, 62, -34, -88, -79, -39, -37, -21, -63, 93, 47, -46, -5, -41, 91, -103, -122, -9, 71, 110, -124, 123, 26, -54, 105, 102, 88, 124, -68, 11, -91, -121, 44, 26, 118, 47, 55, 57, -80, -70, -48, -125, 87, 33, -62, 64, 67, 91, 105, 15, -92, 29, -114, 7, 105, 20, -75, -24, 98, 82, -104, 102, -54, -49, -14, 11, 79, -117, -18, 93, 116, -83, -76, -74, 18, -40, 11, -85, 48, -48, -94, -55, -90, 1, 58, -10, -96, -102, 53, -46, -35, -77, -115, 84, -72, -80, 74, -13, -72, -114, -26, -76, -75, 55, -22, -69, 124, -92, 59, -89, -21, 28, 88, 54, -96, -117, 109, 74, -53, -13, 67, 35, 42, -51, 23, 115, 18, -12, 87, 30, -95, -52, 96, 103, 67, -1, -66, -40, -102, -124, -29, -85, -95, -54, -8, -87, 112, -119, -12, -22, 73, 7, -94, 106, 86, 22, -33, -72, -97, 59, 43, -121, -111, -126, -114, -65, -34, -73, -38, -120, -12, 74, -79, -58, -95, 102, 50, -108, -30, 124, 86, -128, -20, 55, 11, 7, 36, -49, 125, -39, -22, -35, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	}
	
	private static byte[] getC4(){
		return new byte[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 15, 0, 0, 0, 20, 8, 2, 0, 0, 0, -35, -91, -16, 69, 0, 0, 0, -10, 73, 68, 65, 84, 120, -38, -107, -47, -65, 14, -63, 80, 20, 6, -16, 62, -123, -55, -90, -119, 68, 42, 17, 98, 52, 90, -115, 29, -116, 118, 79, -32, 29, -70, 25, 45, -62, 102, -78, 25, 68, -70, 116, -112, 72, 106, 55, 98, 51, -80, -95, -51, -11, -35, -98, -6, -38, 84, 27, -100, 124, -15, -25, -100, -97, -21, -72, 12, -37, 107, -27, -90, -65, 109, -97, 46, 103, 21, 21, -101, 70, -111, -98, -5, -45, 80, -123, 89, -35, 115, -101, -103, -96, 59, 112, -19, -37, -3, -86, -34, -59, 81, -114, 70, 54, -121, 53, 15, -2, -94, 71, -69, -31, 35, 120, -26, -21, -18, -86, -111, -55, -2, -24, -85, 32, 80, -87, -30, 40, -85, 29, -49, -111, 83, -45, 123, 39, -70, -77, -84, -29, 73, 30, -15, 93, 64, -48, 8, 62, -106, -42, 2, -76, 102, 40, -80, 12, 102, 92, -99, 32, -47, -72, 53, -114, -15, 67, -37, 11, -117, 103, 39, 26, 93, 9, 110, 77, 102, 120, 33, 29, 106, -102, 88, -89, 15, -58, 14, -123, -38, -102, -43, 16, 125, 107, 81, -31, 15, -105, 14, 66, -51, -114, -42, -40, -110, -125, 80, 21, -106, -42, -26, -92, -118, 53, -44, 15, 21, 107, -28, 23, 13, 22, 107, -36, -12, 103, -24, -28, -83, -42, -27, -79, 89, 20, 106, 118, -2, -41, 37, -89, -14, 85, -117, 121, 1, -119, -26, 47, -63, 113, 75, 104, -15, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	}
	
	private static byte[] getC5(){
		return new byte[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 15, 0, 0, 0, 20, 8, 2, 0, 0, 0, -35, -91, -16, 69, 0, 0, 1, 28, 73, 68, 65, 84, 120, -38, -107, -110, -79, 74, 3, 65, 20, 69, -25, 43, -84, -20, 12, 8, 18, 65, 20, 75, 59, 109, 83, -26, 3, -76, -78, -16, 11, -4, -121, -19, 44, 109, 66, -60, -58, 42, -99, -123, 72, -102, 116, 66, -46, 7, 109, -116, -99, -123, 118, -22, 46, -29, 9, 87, -17, -104, -52, -120, 56, 92, 118, -17, -66, 119, -26, -19, -101, -57, -124, -18, 104, 71, -102, 60, -114, -101, -40, -60, 108, -99, -34, -99, -104, 9, -1, -93, 59, -61, 109, -124, -101, 61, 63, -27, 40, -5, -95, -59, -96, 96, 23, 127, 89, 101, 90, 109, -48, -113, 35, -71, -62, -63, -11, -106, -92, 74, -48, -114, -28, 90, -96, 41, -1, 7, -67, 55, -40, -108, 64, 77, 43, 98, 99, 37, 90, -99, -68, -66, -67, 48, 28, -74, 61, -52, -18, -85, 81, 85, -90, 15, -121, 93, -113, 76, -57, 125, -81, 63, 98, 93, 95, -116, 123, 11, -12, -18, 85, 27, -103, -50, -25, 77, 74, 12, 10, 118, -108, 41, 110, 32, -98, -24, 118, 127, 67, -30, -125, 70, -87, -124, -25, -89, -66, 8, 24, 82, 98, 18, -67, -92, -3, 94, -57, -41, -58, -63, 57, -35, 58, 95, 47, 62, -65, 91, -113, -114, 4, 94, 18, -3, 81, -49, -97, 120, -49, -44, -63, -16, 51, 71, -126, 59, -92, 50, -73, -45, 27, 117, -126, 73, -12, -22, 89, 11, 113, -108, -81, -1, 54, 105, 118, 50, 28, 93, 12, -102, -45, -86, 84, 28, -97, -38, 72, -12, 74, -75, -122, 8, 21, 55, 28, 95, 30, -111, -123, -45, -13, 19, 16, 89, 36, 110, -75, 88, -81, -121, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	}
	
	private static byte[] getC6(){
		return new byte[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 15, 0, 0, 0, 20, 8, 2, 0, 0, 0, -35, -91, -16, 69, 0, 0, 1, 74, 73, 68, 65, 84, 120, -38, 117, -110, -83, 78, 3, 65, 20, -123, -25, 41, 80, 56, -102, -112, -112, -110, 16, 72, 37, 14, 108, 101, 5, -78, -98, 39, -88, -31, 9, -42, 33, 49, 77, 113, 40, 18, 4, -126, 52, 53, 21, 36, 36, -59, 55, 96, 40, 14, 1, 14, -40, 102, -6, -19, -98, -55, 97, 88, -24, -28, 100, -9, -50, -99, -17, -2, -52, 79, -24, 77, 15, 114, 13, 30, 78, -57, -13, -69, 88, -113, -25, -59, -45, -27, 108, -104, -81, -122, 124, 82, 76, -117, 101, 92, 34, -47, -107, 81, -106, -60, -100, -36, 119, 18, -35, -99, -20, 35, -84, -2, -92, -9, -15, -7, 30, -77, -95, 72, 68, 22, 97, -119, 70, 52, -32, -84, -7, 88, -68, -67, -110, -21, 23, -51, -36, 61, 16, -90, 101, -102, -58, -61, -41, 25, -61, -15, -19, 30, 98, 115, -54, 68, 51, 120, -27, 68, -96, 52, -19, 105, -80, 87, 52, -122, -41, -2, -86, -94, 15, -81, 119, 31, 95, 102, 106, -125, 34, 76, -27, -52, 13, 41, -24, 7, -3, 85, 126, -117, -90, 111, -6, 33, 24, 67, -63, 77, 90, -88, -6, -58, 86, 29, 31, -33, 15, -35, -71, 106, -93, -72, 102, -44, 1, -111, 125, 11, -5, -121, -26, -128, 105, 44, -65, 41, -74, -98, -24, -10, 104, 7, 53, 22, -28, -12, -125, 33, 88, -98, 38, 125, 52, -20, -54, -125, -80, 125, -69, -119, 110, 93, 108, -13, 35, 90, 93, 98, -53, -93, -81, -77, 104, 90, -47, 72, 69, -95, -55, 39, 15, -62, -10, 65, -55, -109, 104, -67, 85, 61, 18, 39, -10, 59, -61, 72, -12, -26, 121, 11, -87, 69, -119, 76, -66, -96, -70, 96, 60, -69, 25, 8, 75, 52, -14, 83, 105, 12, -74, 100, -90, -94, 55, -118, 45, -66, 20, -46, 94, -13, 65, 5, -54, -102, 89, 1, 35, -70, 70, -8, -2, -91, -106, 25, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	}
	
	private static byte[] getC7(){
		return new byte[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 15, 0, 0, 0, 20, 8, 2, 0, 0, 0, -35, -91, -16, 69, 0, 0, 1, 22, 73, 68, 65, 84, 120, -38, 99, 8, 59, 102, 12, 68, -1, -15, -126, -22, -77, -71, 16, 101, 12, -92, -87, -10, 59, 104, 4, 68, 120, -108, -2, -3, -1, 23, -88, 26, -94, 12, -86, -6, -30, -109, 11, 104, -24, -2, -45, 123, 112, -43, 73, 7, -61, 80, 84, 99, -94, -3, 119, -10, -2, -6, -13, 27, -88, 26, -88, 13, 46, -56, -32, -70, -45, 0, 43, -6, -12, -13, 35, -48, 84, -96, -22, -91, 23, 22, -63, 5, -79, -85, 6, 58, 20, -94, 20, 72, 2, -115, 68, -88, -74, -35, -92, -117, -122, -128, -94, 64, 103, 64, 28, 13, 100, 0, -71, 112, 41, -20, -86, -31, 1, -46, 119, -84, 15, 89, 10, -117, 106, -96, 10, -120, 82, -96, -45, -47, -92, 24, 76, -41, -24, -96, 33, 120, -40, 1, -3, -121, 38, -123, -82, -38, 101, -111, 31, -48, 103, 16, 47, 2, -3, -118, -82, 90, 103, -119, 22, 50, 2, -102, 7, 81, -6, -12, -19, 51, 52, 41, 32, 66, 87, 13, 84, 4, 119, 6, 118, -43, 42, 115, -43, 33, 36, 48, -122, 33, 6, 3, 99, 17, -56, -122, -117, -61, 73, 6, 32, 5, 71, 64, -13, 32, 49, 2, -76, 1, 89, 28, -114, 16, -86, -127, 90, -65, -3, -8, 14, 15, 102, -20, -86, 101, -90, -86, 64, 80, -61, -42, -22, -33, 127, -95, -111, 2, 12, 25, -72, 56, 50, 66, -88, -122, -57, 54, 48, -71, 98, 85, -118, 80, 109, 52, -55, 17, 28, -52, 32, 63, 2, 45, 17, -21, 83, 6, 10, 98, -110, 0, 64, -52, -17, 37, -88, 84, 48, 102, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	}
	
	private static byte[] getC8(){
		return new byte[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 15, 0, 0, 0, 20, 8, 2, 0, 0, 0, -35, -91, -16, 69, 0, 0, 1, 67, 73, 68, 65, 84, 120, -38, 101, -109, -79, 78, -62, 80, 20, -122, -5, 20, 78, 110, -112, -104, 24, 76, -120, -122, -47, 77, 87, 70, 30, -64, -99, 39, 96, -31, 9, -70, 57, -70, 16, -36, -100, 76, 28, 28, -116, 97, 97, 51, -63, -99, -64, 2, 108, 12, -70, 41, 109, -82, 95, -5, 31, -49, 45, -19, -55, 31, 122, -49, -7, -65, -98, -98, -37, 91, -110, -63, -4, -54, 53, -6, 24, -66, 47, -33, 66, 25, 44, 72, -85, 46, 74, 124, -11, -72, -104, -124, 44, -53, 67, 30, -2, -125, 53, -59, 35, -70, 63, -69, 68, -76, -87, 114, 78, 115, 63, -106, 24, 100, -76, 15, 64, -48, -81, 120, 78, 73, 35, -84, 58, -67, -35, -17, -44, 27, 78, 21, 31, 12, 43, -46, -73, -81, 93, -92, 54, 72, -87, 60, -97, 71, 69, 100, 116, -45, -16, 34, 113, 68, 95, 63, 95, 124, 110, 22, 50, -18, 102, 3, 82, -118, 44, 84, -63, -94, 34, 37, -70, -92, -13, 84, 115, -29, 49, 3, -12, 122, -69, -14, 77, -85, 99, -92, -55, -65, 127, -66, -22, -81, -81, -14, 52, -93, 123, 79, 29, -119, -10, -95, 17, -76, -96, -111, 51, 70, 115, 31, 70, -13, -128, 52, 91, -92, 59, -45, 115, 84, 109, -52, -96, -92, 58, 32, 5, -87, 48, -93, -3, -99, 96, -48, -93, -42, 2, -41, -24, -10, -61, 25, 23, 111, -61, 90, 21, 73, -37, -3, -51, 14, -86, 23, 52, 114, -102, -58, -86, -44, -22, 74, -115, -26, 99, -16, 73, 28, 45, 15, -95, 8, 92, -93, 79, -17, -37, -56, -9, -108, -105, -1, 3, 56, 126, 25, -64, -9, 45, -52, -24, -101, 73, -33, 105, 32, 116, -56, -29, 49, -31, 70, -6, 36, 109, -95, -15, -53, -88, -7, -78, -71, -123, -70, 0, -56, 63, -93, -102, 83, -16, 123, -122, -126, 64, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	}
	
	private static byte[] getC9(){
		return new byte[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 15, 0, 0, 0, 20, 8, 2, 0, 0, 0, -35, -91, -16, 69, 0, 0, 1, 74, 73, 68, 65, 84, 120, -38, 93, -110, -83, 78, 3, 65, 20, -123, -25, 41, 80, 56, -102, -112, -112, -110, 16, 72, 37, 14, 108, 101, 5, 18, -49, 19, -44, -16, 4, -21, -112, -104, 6, 28, -118, 4, -127, 32, -92, -90, -126, -124, -92, 120, 2, -122, -30, 16, -96, 104, -39, -51, -16, -19, -98, -55, -39, -19, 76, 78, 102, 103, -50, 124, -9, -34, -7, -39, 48, -102, 29, 88, 39, 79, -125, -21, -7, 100, -15, -11, 89, -59, -22, 125, -15, -58, 24, -89, 11, 4, -113, 78, -89, -93, -33, -43, 18, 78, -118, 101, -87, -104, 110, 64, 24, 78, -9, 17, -93, -105, -113, 121, 13, -59, -88, -34, -115, 10, 98, 80, -94, -57, -49, 103, -122, 126, -106, -33, 68, -46, 107, -118, 79, -39, 53, -6, -15, -11, 65, -76, 74, -85, 26, 99, -103, -59, -84, 72, -12, -15, -3, 30, 34, -103, -45, -56, 65, 20, -108, 73, 46, 57, -119, -10, 46, -115, -38, 95, -107, 127, -28, 74, -12, -31, -19, 110, 70, -53, -79, 79, 110, -50, 32, -89, -90, -111, 105, 118, 34, 7, 49, -10, 65, -27, 36, -38, -41, -89, -94, 74, 108, -109, -106, -24, -63, 77, 31, 113, 106, -89, -49, 110, 80, 77, 88, -94, -71, -99, -18, 114, -10, 64, 45, -35, -65, -38, -111, 72, -97, 65, -114, -25, -49, 17, -45, -46, -120, 99, 113, -75, 126, -16, -6, -127, -101, 112, 54, -42, -46, -67, -53, 109, -11, 30, 104, -19, -4, 110, -36, -20, -86, -114, -44, 106, -48, 7, 29, 77, -122, -56, 83, -28, 58, 20, -55, 105, 18, -80, 81, 22, 54, 47, 122, 36, 102, -22, 3, 56, 75, 96, 13, 49, 79, -65, 107, 126, 25, -111, 10, 98, 80, -94, -69, -9, -35, 109, 85, -109, 120, -115, -34, 40, -74, 40, -83, -33, 48, 67, 57, -88, 56, 24, -6, 127, 23, 49, 74, 58, -78, -90, 107, -97, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	}
	
	private static byte[] getCT(){
		return new byte[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 15, 0, 0, 0, 20, 8, 2, 0, 0, 0, -35, -91, -16, 69, 0, 0, 1, 80, 73, 68, 65, 84, 120, -38, 125, -110, -79, 74, 67, 65, 16, 69, -25, 43, -84, -20, 12, 8, 18, 65, -108, -108, 118, -38, -90, 76, 97, 105, -17, 23, -92, -15, 11, 94, 103, 105, 19, -76, -77, 18, 44, 44, 68, -46, -92, 16, -124, -40, -117, 54, -58, -50, 66, -69, -60, 13, -29, -39, -36, 56, -18, 51, 33, -53, -80, -52, -67, 115, 118, -33, -18, -68, -75, -50, 96, -17, -24, -95, 117, 57, -20, 77, 125, -22, -18, -56, 8, -52, -81, -15, 39, 65, 2, -125, 99, -78, -124, -106, -12, -3, -13, -99, 23, 3, -103, -23, -89, -73, 97, -23, -74, -5, -69, -72, -43, -96, -14, -6, 96, 59, 76, -5, -73, 7, 52, -15, 58, 122, 89, -92, 49, -13, 73, 60, -91, -47, -57, 123, -48, -57, -3, 14, -114, -54, 124, 7, -87, 42, -114, 117, 31, 79, -48, 113, -53, -61, -37, 29, -14, 73, -6, 70, 82, 66, 18, -100, 65, 85, 11, -83, -43, -20, -83, -107, 92, 93, 37, -123, 58, 97, -5, -41, -37, -38, 79, -85, -111, -36, -101, -100, 89, 37, -51, 50, 51, 77, -28, -67, 83, 18, -51, 41, -43, 1, -95, 1, -44, -23, -39, 32, -41, 71, 112, 2, 13, -64, 90, 87, -51, -110, 70, 42, -63, 33, 87, -44, 104, 98, 53, 29, -128, 53, 47, -74, -120, -96, -55, -71, 126, -48, -86, 6, -80, -124, -114, -98, 4, 26, -90, 53, -50, 55, 75, 26, -55, 91, 80, -65, -55, 85, 101, -98, -9, 91, 86, 73, -85, 89, -29, 73, -2, -105, -86, -14, -77, -25, -1, 50, 104, 105, -14, -125, 94, 91, 43, 105, 60, -71, -114, 33, -57, -42, -49, 26, -60, -116, -50, -125, -100, 5, 42, -77, 62, -34, 61, 3, -13, -113, -10, 95, -102, 56, -67, -23, 46, -68, 88, -57, -52, -12, 90, -75, 81, -18, -115, 100, 46, -33, 61, 95, 64, 98, -2, 0, 96, 45, 112, 64, 11, -37, 78, 87, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	}
	
	private static byte[] getCJ(){
		return new byte[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 15, 0, 0, 0, 20, 8, 2, 0, 0, 0, -35, -91, -16, 69, 0, 0, 0, -53, 73, 68, 65, 84, 120, -38, 99, 8, 59, 102, -116, 11, -3, -121, 1, -72, 8, 3, 105, -86, -3, 14, 26, -31, 66, 112, -43, 112, 17, -102, -86, 118, -35, 105, -128, 11, -63, 85, -61, 69, 72, 87, 109, -69, 73, 23, 43, -119, -84, 26, 34, -62, 0, -92, 112, 33, -72, 106, -72, 8, -119, -86, 77, -41, -24, -32, 66, 112, -43, 112, 17, 18, 85, -21, 44, -47, -62, -123, -32, -86, -31, 34, 36, -86, 86, -103, -85, 14, -92, 32, 36, -48, 46, 100, 46, -78, 106, -120, 8, 72, 53, 4, 1, -107, 94, 124, 114, 1, -94, 1, -120, -86, -49, -26, 66, -108, 62, 125, -5, 12, -82, 6, -95, -70, -17, 88, 31, 68, 14, -88, 46, 115, 121, 50, 80, -25, -17, -65, 32, -43, -5, -17, -20, 69, -88, -106, -103, -86, 2, 68, 46, -117, -4, 32, 38, -3, -3, -5, -1, -25, -81, -65, 64, 117, 127, 97, -50, 0, -102, 2, 81, 3, 68, 8, -43, -97, 126, 126, -4, -113, 1, -128, -126, 70, -109, 28, 17, -86, -59, -6, -108, -127, 20, -112, -60, -44, -16, 23, -55, 96, -120, 50, 0, 80, -60, -36, -46, 40, -27, -5, 33, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	}
	
	private static byte[] getCQ(){
		return new byte[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 15, 0, 0, 0, 20, 8, 2, 0, 0, 0, -35, -91, -16, 69, 0, 0, 1, 82, 73, 68, 65, 84, 120, -38, 109, -110, -95, 78, 3, 65, 16, -122, -9, 41, 80, 56, -102, -112, -112, 54, 33, -112, 74, 28, -40, -54, -118, -54, -94, 16, 60, 65, 13, 79, 112, 14, -119, 105, 32, 53, 40, -110, -118, 10, 66, 106, 42, 72, -102, 20, 79, -64, 80, 28, 2, 28, -31, 46, -53, 55, -7, -53, -36, 102, -113, -51, 47, -26, -26, -66, -7, 103, 110, -10, 66, 127, 113, -104, -86, 88, 20, -81, -21, -105, 42, 86, 49, -58, -121, -25, -5, -47, -14, 124, -16, -40, -11, -73, -63, 35, -78, 112, -79, 44, -123, -6, -95, -90, -90, 123, -13, 3, 68, -12, -12, -74, -54, 56, -114, 101, -54, -14, 102, 53, 22, -74, -95, 25, -96, -119, -90, 53, -61, 121, -65, -90, -41, 31, -17, -94, -65, -66, 63, -103, 85, -35, -80, 116, 11, -26, 49, -6, 100, -74, 79, -99, -93, -14, 32, 41, -87, 0, -15, -118, -57, -96, -108, 12, 8, -100, 115, -87, 45, -94, 103, 56, -70, -21, -8, -9, 97, 44, -126, 36, 82, -52, 39, 105, 116, 2, -93, 85, 77, 47, 65, -103, -80, -16, -47, -115, -106, 49, 29, -120, -69, -73, -19, 102, -127, -68, -115, -26, -75, -105, 18, -89, 98, 80, 5, 2, -80, -37, -48, -108, -14, -112, -95, 124, 26, 99, -92, 118, -95, 125, -67, -57, -36, 90, 31, -79, -53, -109, 62, 55, 27, 51, 58, -35, -119, 80, -116, -3, 34, 85, -58, -79, -99, -76, -82, 118, -1, 118, 100, -43, 60, 66, -45, 29, -117, -20, -2, -15, 50, -38, 123, 113, -114, -57, 61, 50, -120, -128, 49, 82, 26, 11, -93, -73, 47, 91, -34, 14, -30, 98, 58, 82, -127, -33, -79, 22, 66, 38, -128, 34, -120, -86, -2, -29, -2, 63, 54, -73, 104, -44, 28, 52, 59, -74, -63, -83, 98, 71, 52, -115, -102, 5, -70, 66, -26, -4, -87, -30, -39, -28, -12, 23, 55, -52, 117, 95, -26, -99, -21, 66, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	}
	
	private static byte[] getCK(){
		return new byte[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 15, 0, 0, 0, 20, 8, 2, 0, 0, 0, -35, -91, -16, 69, 0, 0, 1, 29, 73, 68, 65, 84, 120, -38, 125, -110, -79, 106, 2, 65, 20, 69, -25, 43, -84, -46, 69, 16, -126, -127, -112, 96, -103, 46, -74, -106, 22, -106, -10, 126, -127, -1, -80, -99, -91, -115, -104, 46, 85, -70, 20, 65, 108, 44, 4, 65, 123, -47, 70, -45, 89, -60, 78, -35, 101, 115, -106, -101, -68, 76, -122, -55, 14, 23, 125, -17, -35, 51, -9, -83, -117, -82, 61, 123, 64, -7, -49, 81, 107, 122, 94, -114, -52, -22, 47, 122, -82, -124, -58, -50, -14, 76, 115, -82, 49, 113, -83, -23, 61, 50, 90, 45, -62, -37, -18, 55, 26, -82, 118, 75, 90, -122, -1, -46, -124, 89, 48, 75, 52, -116, -45, -35, 105, -5, 120, -6, -124, 70, 92, -77, 8, -41, 124, -69, 67, 70, -85, 101, 117, -98, -90, -96, -5, -61, 71, 103, -34, -48, 16, 69, 104, -10, -126, 82, 67, 83, 27, 90, -48, -113, -81, -73, 62, -51, 58, -98, -127, -30, -100, 94, 38, -21, 119, 92, 1, 42, -100, -66, -116, -74, 23, -52, 29, -125, 76, 33, 109, 39, 78, 55, 94, -22, 40, -113, -99, 100, -106, -56, 53, -107, -47, -60, -109, -9, -121, -82, -113, 111, 80, 16, -23, -41, 2, -92, -112, -26, 61, -48, -6, -65, -107, -56, 95, -70, 58, -84, -7, -76, -68, -89, 81, 43, -120, 23, 86, -48, -56, 60, -75, 24, 44, -15, -29, 53, -113, -45, -120, -65, -118, 31, -1, 77, 95, 13, -86, -56, 12, -75, -110, 31, -49, 54, 38, 101, -76, -59, 95, -78, 34, -66, -96, 43, -55, 117, 64, 107, -62, 39, -14, -29, 121, -110, 47, 79, -82, 72, -104, 26, 16, 90, 122, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	}
	
	private static byte[] getCA(){
		return new byte[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 15, 0, 0, 0, 20, 8, 2, 0, 0, 0, -35, -91, -16, 69, 0, 0, 1, 54, 73, 68, 65, 84, 120, -38, -123, -109, -83, 78, 3, 81, 16, 70, -17, 83, -96, 112, 52, 33, 33, 37, 33, -112, 74, 28, -40, -54, 10, 36, 40, 4, 79, 80, -61, 19, -84, 67, 98, 26, 72, 13, -118, -92, -94, -126, -112, -102, 10, 18, -110, -30, -111, -128, 67, -128, 35, -12, -26, 114, 46, -33, 118, -10, 50, 98, -103, 124, -39, -52, -49, -39, -103, -23, 52, 27, 6, -13, -67, 82, 71, 15, -67, -76, 50, 124, 87, 13, 46, -82, -26, -107, -47, -8, -18, -123, -48, -97, -19, -102, -120, -17, -97, -17, 106, 118, -71, -60, 47, -85, 40, -72, -8, -13, -21, 35, -90, 8, -52, 19, -65, -115, 62, -98, 13, -124, -54, -16, -55, -4, -95, 15, -89, 59, -90, -21, -59, -88, -92, 49, 50, 37, -48, -48, -68, -6, -12, -78, 16, -92, -19, 121, -109, -116, -89, -9, 111, -73, 17, 67, -83, -91, -7, 90, 70, 64, -90, -27, -95, -31, -29, -103, 8, -6, 17, -66, -66, -65, -39, 29, -115, 105, 104, -101, -82, 50, 27, 43, 36, -33, -48, -67, -101, -82, -60, -67, 84, 102, 8, -95, 70, -23, -114, -58, -44, 116, -71, 116, -9, 106, -117, 12, -99, -54, -97, 81, -45, -44, -112, -26, 106, 105, 101, -112, -99, -120, -86, 50, -95, 44, 48, -41, -35, -37, -75, -56, -12, -63, -88, -97, 90, -115, 22, 48, -103, -18, 92, 110, -38, -19, 90, 12, 6, 50, -45, -36, 40, -58, 127, 104, -104, 76, -81, 95, 116, 116, 59, -20, 116, 124, 66, -118, -116, -23, 124, 50, -116, 121, -109, 4, 67, 24, 32, -44, 87, -79, 19, -69, -2, -18, -99, -66, 99, -18, 21, -8, -25, -30, -22, 76, 107, -43, 6, -124, 123, -38, -9, 1, -7, 3, -44, -45, 77, -102, -70, -110, -125, 71, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	}
	
	 /*********************************************************************************************************
	 **											DIAMONDS													 **
	 *********************************************************************************************************/

	private static byte[] getD2(){
		return new byte[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 15, 0, 0, 0, 20, 8, 2, 0, 0, 0, -35, -91, -16, 69, 0, 0, 1, 50, 73, 68, 65, 84, 120, -38, -115, -110, -79, 74, 3, 65, 20, 69, -25, 79, 68, -126, 69, 64, 8, 1, -15, 15, -14, 15, -127, 20, 33, 85, 74, 59, 69, -117, 52, 54, -87, -84, -46, -89, -11, 15, -46, 38, -124, 52, 73, 26, 65, 44, 54, 65, 80, -126, -91, 32, -126, -96, -55, -80, -98, -35, 27, -34, 78, -122, 21, 28, 46, 59, -53, 125, 103, -34, -68, 55, 51, -18, -68, -1, -10, 127, -71, -77, -37, 87, 83, -13, 46, 25, 77, 54, 31, 95, 59, -97, -90, -55, -53, -25, -32, 126, 5, 17, 2, 123, 26, 23, 20, 110, 11, -104, 15, 126, -66, 127, 60, -117, 99, -70, -34, 123, -122, 6, 77, 15, -121, -49, -41, 40, 61, 76, 70, 51, 33, 114, 88, -42, 104, 40, -67, -80, -104, -90, 92, 53, 52, 127, 124, -41, 114, 28, 49, 25, 93, -69, 73, 16, 97, 92, -118, 33, -115, 28, -38, -80, 122, -28, -96, -116, 62, -67, 124, -30, 11, 119, 53, 92, -53, -59, 65, 86, 90, 65, 43, 80, 42, 43, -35, -100, 63, 105, -10, 17, 74, 3, 5, 93, -67, 120, 40, 21, -112, 104, -18, -56, -52, 114, 26, -62, -118, -90, -35, -126, 62, -23, 46, -104, -62, 47, 97, 59, 123, 118, 16, -89, 80, 70, -121, -62, -78, 75, -27, -89, 113, -67, 12, -93, 46, 66, 57, 117, 123, 39, 52, 26, -27, 114, -107, -50, -52, -60, -115, -38, -115, 80, 58, -31, -29, -10, 52, 4, 10, -102, 48, -7, 84, 49, -53, -32, -92, 3, 90, -106, -35, -77, 30, -58, 81, 107, 108, 116, 40, 71, 0, 89, 103, 62, 63, -121, 72, -12, 42, 108, 79, 71, -81, 84, 37, 73, -34, 123, 118, 22, -10, 11, 57, 125, 72, -98, 99, -50, -27, -96, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	}
	
	private static byte[] getD3(){
		return new byte[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 15, 0, 0, 0, 20, 8, 2, 0, 0, 0, -35, -91, -16, 69, 0, 0, 1, 43, 73, 68, 65, 84, 120, -38, -115, -110, -67, 74, 3, 65, 20, -123, -25, 77, 36, -120, 69, 32, 32, -126, -8, 6, -66, 67, -64, 66, -84, 44, -45, 25, -76, -80, -79, -79, 74, -107, 62, -83, 111, -112, -42, 32, 54, 38, 77, 64, 82, -84, 34, -8, -125, 77, 32, 16, 2, 73, -111, 12, -55, -73, 57, -53, -35, -39, -35, 4, 118, 57, 59, 59, 115, -17, 55, -77, -25, -34, 93, 119, -10, -8, 95, 94, -18, -12, -31, 7, -67, -67, 79, -42, 123, 46, 82, 98, 80, 76, -77, -87, 44, 125, 114, -1, 85, -26, 108, 97, 49, -115, -70, -67, 63, -94, -90, -24, 123, 102, 52, 41, 49, -56, -39, 76, -69, 53, 97, -61, -46, -57, -24, -17, 120, -127, -49, -108, 62, -66, -117, 66, 17, 106, 118, 62, -123, 50, 50, 15, -77, -82, 118, 51, -30, 97, 35, -57, 79, -25, 43, 56, -124, -121, 48, -101, -48, -95, -52, 3, -42, 115, 41, -108, -95, -51, -125, -118, -61, 113, -98, -82, 54, -122, 18, -117, -10, -45, 71, -82, 125, -20, 55, 0, -71, 112, 81, 111, 69, -66, -48, -17, -13, -37, 65, -122, 62, -70, -18, 107, -92, 14, -11, -101, 66, -115, -26, -123, 66, 1, 28, 119, 81, -72, -62, -73, 104, -54, -75, -8, 110, 26, 97, 64, 52, -34, 82, -6, -16, -22, 21, 41, -83, -119, 69, -52, -116, 34, 40, -95, 65, -15, 74, -107, -107, -53, 23, -117, -8, 109, -55, -60, 83, -102, 52, -62, 28, 57, 18, -76, -116, 37, 7, -101, 111, -118, 22, -125, -36, -63, -59, 51, -124, -33, -13, -69, -14, -79, -24, 9, -116, -28, -12, 8, 127, -47, -16, -110, 13, -93, 55, 54, -91, 91, -44, 40, -126, -73, 74, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	}
	
	private static byte[] getD4(){
		return new byte[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 15, 0, 0, 0, 20, 8, 2, 0, 0, 0, -35, -91, -16, 69, 0, 0, 1, 13, 73, 68, 65, 84, 120, -38, -115, -110, -49, 10, 1, 81, 20, -58, -17, -125, 40, 73, 22, 74, 73, -55, 27, 120, 4, -91, 44, 100, 101, 105, 71, 44, 108, 108, -84, -84, -20, 109, -67, -127, -78, 34, -39, 96, -93, 100, 49, -92, -4, -55, 70, 41, 41, -14, 103, 26, -33, 117, 56, 115, -57, 12, -26, -12, 53, -73, -5, -35, -33, 61, 125, -9, 52, 34, 86, -35, -70, -105, -120, 86, 86, -114, -62, -39, 122, 119, 54, -98, -59, -90, -8, -122, -42, -101, 51, -29, 93, 22, 58, 82, 94, 124, 124, -109, 53, -19, 112, -70, -85, 52, -7, 2, -117, 93, -83, -18, -26, -90, 51, 108, -80, -17, 64, 23, 26, 115, -96, 10, -84, -48, -31, -110, -90, 10, -42, 96, -78, 55, -84, -59, -89, -97, 52, 26, 83, 87, 53, -73, 73, -121, -14, 83, 22, 26, 95, -82, -81, 8, -72, -58, 52, 3, 22, 26, 83, 35, 86, 91, 30, -79, 117, -96, -125, -71, 49, 9, 3, -30, -105, 97, -126, 112, -104, 102, -58, -92, -7, 113, 24, 31, 57, 14, 116, 32, 59, -60, -126, 102, 58, -90, -10, 108, 30, 47, -114, -20, 52, 97, -110, -122, 16, -108, 98, 32, 58, -99, 65, 76, -45, 22, -110, -76, -6, -4, 31, 37, 105, 127, -90, 79, 49, -2, 22, 72, 73, 67, 110, 122, 75, -38, -105, -18, 65, -120, 107, 23, -1, 88, -76, 5, 38, -68, -87, -50, 55, 17, -118, 59, -20, -104, -76, 39, -47, 86, -59, 52, -118, -103, 7, 101, 66, 108, 24, -17, 18, 40, 117, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	}
	
	private static byte[] getD5(){
		return new byte[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 15, 0, 0, 0, 20, 8, 2, 0, 0, 0, -35, -91, -16, 69, 0, 0, 1, 20, 73, 68, 65, 84, 120, -38, 99, 48, -21, 120, 70, 60, 98, 48, 105, 126, 4, 65, -89, -82, -68, -5, -113, 13, -108, -49, -65, 3, 87, 3, 85, 13, -44, -121, 85, -11, -17, -65, 24, -86, 13, -21, -18, 1, -55, -57, -81, -65, -29, 81, 13, 81, -61, 0, -92, 32, 8, -85, 51, -2, -2, -1, 31, -47, 119, 11, -94, 26, -120, -48, 85, 3, -35, 3, 23, -127, 32, -96, 82, -3, -86, 91, 80, -43, 64, 22, 4, -63, 85, -61, 69, 48, 17, -119, -86, 117, -54, -82, 65, 16, -78, 106, -72, 32, 26, 66, 87, -3, -15, -37, 31, 96, -32, 0, 61, 119, -21, -31, 103, 96, 104, -96, -85, -42, -52, -65, 8, 68, 64, -113, 99, 13, -109, 41, 43, 110, 67, 20, 64, 16, 1, -43, -1, -63, 33, -120, 80, -83, -102, 126, 26, -62, -38, 126, -16, -55, 95, 108, -86, -127, -30, 16, 53, 64, 18, -92, 26, -114, -128, -10, 2, 77, 2, 50, -128, 78, -124, 36, 4, -120, 7, -32, 10, 80, 84, 35, 35, -41, -54, 51, 16, -43, 64, -124, 80, -83, -100, 120, 20, 23, -126, 59, 6, 46, 2, 85, -83, 24, 127, 24, -30, 12, 32, 3, 34, 2, 52, -5, 47, 44, 76, 17, -86, -127, -46, 64, 4, -79, -9, -3, -57, -97, -64, 48, 6, 114, -127, -106, 2, 61, 7, -113, 47, -120, 26, 32, 98, -112, -113, 62, 0, 68, 64, -81, 96, 13, 62, 96, -118, 5, -38, 9, 81, 3, 68, 32, -43, -56, 38, -95, 1, -120, 51, -32, -86, 1, -65, -122, 92, 59, 27, -97, 75, -13, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	}
	
	private static byte[] getD6(){
		return new byte[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 15, 0, 0, 0, 20, 8, 2, 0, 0, 0, -35, -91, -16, 69, 0, 0, 1, 82, 73, 68, 65, 84, 120, -38, -115, -109, -67, 74, 3, 65, 20, -123, -9, 65, 4, 9, 98, 33, 4, 66, 32, -8, 6, 62, 66, 64, -80, 8, -87, 82, -38, 69, -110, 34, 77, 26, 43, -85, -12, -74, -66, -127, 96, 101, 8, 105, -110, 52, -126, 88, -84, 34, -28, 7, -101, -128, 32, -126, 22, 58, -84, -33, -28, 76, 110, 38, -85, -123, -61, 33, 59, 123, -26, -101, 59, 103, -17, 110, -110, -61, -13, -105, -1, 43, -87, 116, 103, -79, -50, 46, -97, 70, -9, -81, 95, 46, 99, -92, -45, -9, -34, -43, 35, -112, -83, 110, 104, 92, -42, -32, -124, 50, -36, 74, -20, -79, 13, -98, 46, 119, -98, -47, -15, 69, -6, -10, -15, 109, -88, 13, 28, -86, 0, 120, 90, 40, -70, -18, 47, 88, -8, 5, 103, -13, -27, -89, 85, 12, 52, 103, 25, -54, 54, 110, 49, 41, -55, 45, -65, -48, -91, 118, -22, 105, 93, 120, 56, 85, 34, 12, -88, 76, 32, 80, 18, 114, 43, 37, -70, -88, 12, -27, 41, 44, -89, -40, 124, 64, -20, 49, -44, -45, 114, -23, -102, 98, 112, -120, -100, 63, -75, 69, -69, 21, 77, 121, -14, 48, -57, 36, -58, 22, 125, 112, 122, -121, -36, -70, 89, -42, 68, -105, -123, -58, -77, 95, 12, 10, -76, -11, 75, 39, -28, -58, 81, 107, 18, -24, -3, -58, 56, -90, -43, 96, 50, 112, -120, 57, -12, 96, 67, 35, 91, 32, -76, 28, -60, 92, 38, 47, 95, 78, -98, -90, 77, 70, 19, -64, -30, 5, 122, -81, 62, 68, -20, -42, 2, -106, 28, 20, 87, -111, 19, 104, 14, 117, -21, 7, -110, 83, -88, 13, -104, 59, 23, 94, 112, -96, 113, -111, -66, 85, -53, -115, 19, -25, 102, 34, 44, -39, 61, -71, 69, 22, 81, -107, 114, 61, -95, -27, -62, 60, -67, 83, -67, 65, 86, 41, -117, 90, -82, 127, -125, 80, -12, 3, 71, 75, 120, 29, 38, 90, -74, 114, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	}
	
	private static byte[] getD7(){
		return new byte[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 15, 0, 0, 0, 20, 8, 2, 0, 0, 0, -35, -91, -16, 69, 0, 0, 1, 34, 73, 68, 65, 84, 120, -38, -115, -110, 49, 75, 66, 81, 20, -57, -17, 7, 17, 36, -60, 65, 16, 68, -112, -66, -127, 31, 33, 8, 26, -60, -55, -47, 77, -47, -95, -91, -59, -55, -87, -35, -75, 111, 16, 52, 37, -30, 82, 45, -126, 56, 60, 35, -48, -94, 37, 40, 68, 48, 66, 47, -49, -97, -17, -68, -114, -41, -85, -108, -14, -29, 122, 61, -25, -9, -18, -5, 115, -82, -26, -76, -11, 126, 60, -90, 112, 53, -123, -16, -49, 79, -67, -13, 44, -38, -1, -10, -46, 58, 118, -2, -14, -27, 72, 27, 115, 99, -61, -61, -16, -45, 35, -104, -52, -59, -74, 97, 72, 98, -47, 98, 91, -34, -96, 43, -36, 118, -33, 108, 100, -13, -104, 58, 38, -41, 12, -10, -95, 49, 91, -84, -28, -32, -21, -101, -79, -42, 99, 59, 91, 27, -55, 42, 27, -126, -38, -33, -36, -60, -40, -38, 98, 120, -112, 123, 25, -23, 108, -36, -6, 1, -101, 51, 68, -75, -47, -92, 119, -20, 76, 117, -32, 66, -119, -96, -110, -127, -24, -4, 116, -69, -66, 13, 50, 59, 14, 102, 44, 94, -53, -92, 43, -113, 124, -23, 90, 108, 60, -39, 72, -107, 11, -9, -70, 27, -37, 69, 99, -68, 126, 124, 123, 45, -33, -26, 0, 36, -79, 121, -20, -128, -99, 42, -9, -107, -13, 118, 16, -33, -74, 13, -39, -45, 118, -69, -80, 99, -21, 109, -13, -122, -109, 82, 15, 124, 91, -86, -64, 73, 95, -77, 31, -115, -95, 117, 23, -109, -68, -72, 23, -104, -128, -2, 69, -103, -116, -42, 93, -74, 54, 49, 100, -52, -52, 59, 113, 118, 7, -5, -10, 26, 72, -124, 54, -124, -32, -94, 103, -85, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	}
	
	private static byte[] getD8(){
		return new byte[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 15, 0, 0, 0, 20, 8, 2, 0, 0, 0, -35, -91, -16, 69, 0, 0, 1, 77, 73, 68, 65, 84, 120, -38, -115, -110, -67, 74, 3, 65, 20, -123, -25, 65, 2, 18, -60, 66, 8, 4, 65, 124, 19, 65, -80, 8, -87, 44, -45, 41, 88, -92, -79, -79, -78, -78, -73, -11, 13, 4, -85, 4, -79, -47, 74, 8, 22, -101, 32, 104, -126, -115, 32, -120, -96, -59, 58, -116, -33, -18, -103, -71, -5, 99, -29, 112, -40, -67, 115, -18, -73, 51, 119, 102, -81, -37, 57, 125, -3, -65, -36, -10, -55, -117, -23, -24, 98, 113, 55, 123, -49, 125, 96, 16, 48, -83, 103, 81, -92, -7, -18, -4, 114, 14, 39, 84, 1, -62, 108, -48, 91, -29, 39, -60, 50, 96, 37, 89, 13, 95, 126, -90, 29, 96, 42, -6, 106, -70, -54, 19, 75, -84, -87, 79, 83, 49, 40, -46, -53, -73, 111, -27, -40, 90, 14, -127, 118, 35, 85, -47, -3, -29, 12, -39, -42, 88, 76, 121, 114, 18, 51, -59, -96, 6, -51, -24, 29, 62, 50, -43, -77, 101, 22, 52, 17, -30, -66, -108, -40, 59, -53, -28, 16, -56, -55, -98, 63, -27, -96, 72, 83, -91, -27, 84, 34, 65, 72, 39, -47, 110, 5, -67, 57, 122, 64, -92, 63, -66, 126, 82, -95, 62, -44, 110, -109, 77, -60, 32, 103, 17, -9, 26, -2, 12, -106, 96, -31, -118, -34, 56, -72, -25, -59, 46, -74, 118, 107, 80, -110, 80, -56, -126, 70, 86, -73, 126, 7, 83, -5, 95, -66, 44, 93, 88, -92, 117, 38, 53, -122, 28, 91, 2, -109, 27, -117, -12, -6, -16, 22, -7, -12, 35, 12, -19, 14, 110, 120, -42, 125, -80, 72, 91, 25, -44, 7, 103, -78, -101, 17, -26, -28, -46, 12, 118, -69, -122, -86, 85, 66, -39, 42, 114, -36, -38, -2, 4, 113, 38, 107, -47, -42, 41, -27, 8, 43, -24, -50, -18, 53, 5, -8, 102, 91, -25, -75, 102, 39, 11, 3, -7, 11, -127, -64, -127, -94, 35, 4, -30, -123, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	}
	
	private static byte[] getD9(){
		return new byte[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 15, 0, 0, 0, 20, 8, 2, 0, 0, 0, -35, -91, -16, 69, 0, 0, 1, 68, 73, 68, 65, 84, 120, -38, -115, -110, -67, 74, 3, 65, 20, -123, -25, 77, -126, 72, 10, 65, 16, 33, -8, 6, -66, -125, 96, 33, -87, 82, -38, 41, -90, -80, -79, -79, -78, -78, -73, -11, 13, 108, 13, 33, 77, -76, 17, -60, 98, -107, 64, 52, -92, 17, 4, 17, -76, 88, -121, -11, 91, -49, 120, -78, 12, 41, -68, 28, 102, -25, -25, -69, 63, 115, 119, -62, -42, -23, -4, -1, 10, -99, -109, 103, -117, -11, -43, 96, 86, 76, 63, 98, 85, 49, -98, 95, 62, -78, -45, 4, 22, -12, -50, 89, -15, -2, -7, 93, -58, 10, 20, -45, -8, -14, -6, -43, 116, -88, -23, -51, -29, 9, -29, -8, -2, 45, -2, 65, 54, -100, -55, 102, 38, -16, 65, -121, 23, 79, -26, -56, -128, 39, -93, 50, -32, 64, 120, 97, -119, 38, 64, -7, -117, 83, -82, -50, 24, -103, -53, -97, 11, 36, 122, -93, 95, -16, -15, 1, -43, -77, 35, -111, -48, -59, 104, -89, -90, -41, 15, 30, 92, -122, 81, 73, -59, 80, 88, -94, 65, -111, -81, -91, -91, -27, -101, 104, -103, -45, 84, 98, -108, 121, 22, 37, -84, -19, -33, 33, 114, 41, 41, 23, 32, 35, 59, -116, -38, -108, 9, 75, 52, -73, -82, -106, 117, 48, -89, -37, -67, 27, 62, -37, 71, -73, -39, 113, 102, 48, -112, 53, 45, 7, -11, -85, 105, -10, -25, -1, 11, 75, -76, -60, -75, 104, -83, 123, 44, 127, 117, 48, -47, -85, -35, -111, 101, 55, -51, -11, 28, -28, 41, 96, 65, 83, 58, -46, 124, 101, 111, -120, -12, -50, 48, -36, 88, -42, -76, 14, 16, 1, 40, -108, 98, -104, 19, -40, 47, 7, 35, -118, -104, -48, -38, -67, 70, -84, -53, -104, -65, 85, 25, 110, 98, 80, -94, -23, 119, -116, -53, 123, 71, 32, -45, 63, 29, 49, 122, -11, -67, -128, 15, -106, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	}
	
	private static byte[] getDT(){
		return new byte[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 15, 0, 0, 0, 20, 8, 2, 0, 0, 0, -35, -91, -16, 69, 0, 0, 1, 85, 73, 68, 65, 84, 120, -38, -115, -110, -69, 74, 4, 65, 16, 69, -21, 79, 68, 100, 3, 65, 16, 97, -39, 63, -16, 31, 4, 3, 49, 50, 52, 83, -42, -64, -60, -60, 104, 35, 115, 83, -1, -64, -44, 69, 76, -44, 68, 16, -125, 81, 4, 31, -104, 8, -126, 8, 43, 62, -118, -10, -12, -36, -98, -78, 3, 3, -117, -53, 76, -35, -22, 51, -35, -43, -45, 109, -125, -35, -89, -1, -53, -6, 59, -9, -68, -10, 14, -82, 83, 27, -40, -48, -31, -8, -15, 117, -14, -115, 72, 96, -88, 24, -36, -57, -89, -89, 46, 2, 61, -67, 124, -7, -14, -60, 0, 79, -124, -51, 52, -81, 95, -74, -93, 55, -9, 111, 4, 41, -68, 21, 69, -45, 28, 17, 11, -37, -73, -24, -31, -7, -67, -98, 66, 65, 49, 119, -30, 109, 22, -12, -46, -88, 81, 15, -51, -35, 27, -19, 98, -11, 49, 50, -26, -57, 107, -105, -34, -46, -54, -7, -128, -95, -7, -83, -122, 10, -119, 70, 77, 62, 104, 44, 127, -128, -124, 95, 65, 62, -73, 113, 37, 0, -101, 105, 60, -126, 86, -9, -28, -38, 9, 79, 13, 73, -40, 84, -45, -38, 22, -71, -70, -92, 82, -45, 2, 108, 118, -3, 66, 70, -69, -60, -86, 105, 42, -28, 82, 0, 38, 31, 115, -1, 73, 7, -112, -23, -34, -38, 89, -12, 45, 58, -91, 66, 51, 84, 3, 38, 31, 52, 86, -37, -89, 66, 46, 5, 96, -14, -47, 55, 121, -4, -109, -96, 85, -52, -99, 76, -81, 28, -117, -10, -114, -114, -1, 77, 62, -77, 122, -126, 96, -80, 121, 110, 25, -99, 22, -127, -43, -94, -70, 70, 12, 33, 14, -69, -100, -68, 124, -52, 77, -66, 56, 60, -49, -25, -22, -7, -14, -112, -77, 2, 23, -90, -100, -4, -44, -14, 17, -118, -66, 101, 53, -100, 87, -16, 114, 99, 9, 90, 47, 52, -117, 122, 69, 71, 99, 117, 80, -4, 1, 36, -36, -104, 75, 42, 78, -14, -36, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	}
	
	private static byte[] getDJ(){
		return new byte[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 15, 0, 0, 0, 20, 8, 2, 0, 0, 0, -35, -91, -16, 69, 0, 0, 0, -44, 73, 68, 65, 84, 120, -38, 99, 48, -21, 120, 70, 60, 98, 48, 105, 126, -124, 11, -3, -121, 1, -72, 8, -23, -86, 13, -21, -18, 97, 37, -111, 85, 67, 68, 24, -128, 20, 46, 4, 87, 13, 23, 33, 81, -75, 126, -43, 45, 92, 8, -82, 26, 46, 66, -94, 106, -99, -78, 107, -72, 16, 92, 53, 92, -124, 68, -43, -102, -7, 23, 113, 33, -72, 106, -72, 8, -119, -86, 85, -45, 79, 3, 41, -84, 36, -78, 106, -120, 32, 72, 53, 46, 4, 87, 13, 23, 33, 81, -75, 114, -30, 81, 56, 2, -38, -123, -52, -123, -85, -122, -117, 48, 32, 43, -67, -11, -16, 51, 92, 67, -7, -4, 59, 127, -1, -126, -108, 62, 126, -3, 29, -95, 90, 49, -2, 48, 4, 77, 89, 113, -5, -17, -1, -65, 64, 57, -96, -70, -120, -66, 91, -89, -82, -68, -125, 24, 12, 100, -64, -43, 48, -56, 71, 31, 0, 34, -41, -54, 51, 96, -125, -2, -1, -3, -5, -9, -41, -97, -33, 112, 55, -4, -2, -5, 31, 104, 10, 68, 13, 16, -127, 84, -53, -124, -18, 2, -86, -2, -8, -19, -49, 127, 12, -16, -27, -53, 23, -96, -37, -32, -86, 1, -96, 107, 34, 44, 73, -68, 85, -38, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	}
	
	private static byte[] getDQ(){
		return new byte[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 15, 0, 0, 0, 20, 8, 2, 0, 0, 0, -35, -91, -16, 69, 0, 0, 1, 81, 73, 68, 65, 84, 120, -38, -115, -110, -67, 74, 67, 65, 16, 70, -25, 77, -126, 72, 10, 65, 16, 65, 124, -125, -68, -125, 96, 33, 86, -106, 118, -118, 22, 54, 54, 86, 86, -23, 109, 125, 3, 91, 69, 108, -44, 70, 16, -117, -85, 8, 106, 72, 35, 24, -126, 16, -119, 113, 89, -49, -26, -53, 29, -41, 13, -120, -105, 47, 55, -77, 51, 103, 126, -18, -18, -38, -14, 65, -9, -1, -78, -91, -3, -25, 92, -19, -29, -5, -22, -23, 61, -60, -12, 92, -34, -66, 109, 31, 61, 0, 121, -12, -121, -58, 11, 55, 10, 81, 40, 111, 108, 116, 114, -42, -7, 69, 47, -18, 61, -14, -90, -110, -96, -4, 97, 57, -4, 12, 36, -120, 49, -2, 16, 3, -116, 10, 48, 75, 32, 68, 103, -80, 9, -3, -14, -6, -95, 88, 127, -16, -59, -84, 120, 8, 83, -62, 115, 84, 62, -47, 43, -121, 85, -88, 81, 108, 60, 11, -69, -107, 90, 43, 33, -116, 67, 56, -115, -97, 92, -6, 32, -106, -82, -7, -83, 59, 111, 75, -108, -98, -122, -117, -17, 83, 109, 10, -77, 44, 68, 45, 69, 49, 18, -83, 108, 122, 77, -93, -120, 18, 26, -122, -50, 54, -73, 121, -93, 5, 29, -80, 11, 65, 11, 96, 18, -128, -65, 104, 6, -107, -31, -128, 53, 55, -82, 98, 125, -50, 4, 88, -22, 13, 74, 61, -58, 16, 29, -99, -10, -71, -79, 93, -18, -44, -36, -38, -14, 68, 79, -50, 124, 92, 73, 40, -123, -3, 92, -4, -32, -46, 14, 18, -53, -9, 123, 118, -3, 2, -47, -99, 27, 86, 92, 1, 106, -39, -52, -38, -71, -97, 37, 9, -83, -99, 107, 37, 96, -12, -6, -61, -100, -90, 68, -94, 81, 113, 79, -28, -92, -107, 95, 53, 90, 53, 86, 79, -115, 31, -54, 7, -115, 117, 31, 71, 117, 13, -45, 89, -118, 70, -45, -125, 22, -55, 108, -58, 55, 31, -65, -102, 72, -59, 81, -59, 86, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	}
	
	private static byte[] getDK(){
		return new byte[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 15, 0, 0, 0, 20, 8, 2, 0, 0, 0, -35, -91, -16, 69, 0, 0, 1, 49, 73, 68, 65, 84, 120, -38, -115, -110, -63, 74, 2, 81, 20, -122, -17, -125, 8, 33, -46, 34, 16, 36, 8, -33, -96, 71, 16, 4, 23, -47, -54, -91, -69, -92, 22, 110, -36, -76, 114, -43, -66, -83, 111, 16, -76, 50, -92, -115, -70, 17, -94, -59, 24, -127, 38, 110, -124, 66, 2, 35, 106, 24, 63, -3, 103, 14, -29, 69, -93, -53, -17, -11, -98, 115, -66, -7, -49, -103, -85, -82, 120, 61, -5, -65, -36, 73, 115, -126, -94, 100, 41, 52, -35, 61, 76, 127, -62, -72, 84, 110, 5, 127, -47, -11, -37, 23, 67, 111, -38, -93, -75, -9, 113, -29, -43, -93, -55, 40, 25, -116, 63, -95, -31, 57, -128, -110, 113, -86, 25, -83, 16, 97, 38, -108, 69, 19, 37, 119, -45, -116, -72, 88, -2, 10, 101, 116, 37, 11, 87, -127, -29, -125, -116, -26, 76, -95, -9, -12, 46, -12, 109, -2, -59, 0, 98, 118, -45, -12, 21, -54, 36, -100, -13, 23, -49, 36, -75, 59, -66, 80, 122, 18, 102, -120, -110, 25, 84, 53, -7, -76, 93, 48, -49, -16, -92, 79, 31, -43, -122, 40, 74, 90, -37, 5, 67, -45, 90, 85, -45, 22, -19, 45, 46, -47, -89, 15, -85, -3, 125, 52, -10, 116, -89, 42, -122, 125, 77, 35, -49, 50, 76, -99, 5, 72, 62, -51, 91, 18, -78, -101, -67, 92, 99, 58, 119, -2, -120, -116, 86, -19, -12, 114, 32, -5, 112, 99, 47, 6, -7, -76, -62, -20, 89, -41, 126, 78, -39, -57, 52, 5, 100, -76, 66, -60, 95, 37, -3, 38, 74, -70, -125, 74, 7, 89, 65, -95, -124, -67, -122, -7, 88, 124, 51, 30, -103, -67, 116, -90, 116, 111, -10, -102, -98, -28, 10, 1, 75, 122, -90, -9, 9, -13, -44, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	}
	
	private static byte[] getDA(){
		return new byte[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 15, 0, 0, 0, 20, 8, 2, 0, 0, 0, -35, -91, -16, 69, 0, 0, 1, 47, 73, 68, 65, 84, 120, -38, -115, -110, -79, 74, 3, 65, 16, -122, -9, 77, 68, -60, 66, 16, 68, -112, -68, 65, -34, 65, -80, 16, -85, -108, -23, 20, 45, -46, -40, 88, 89, -39, -37, -6, 6, -74, -118, -40, -60, 52, -126, 88, -100, 34, -88, 33, -115, 32, 4, 65, -117, -36, 114, 126, -25, 127, -50, -51, -82, 16, 92, 126, 118, 103, 102, -65, -35, -99, -5, -71, -48, 57, -102, -4, 95, 97, -29, -16, -59, -117, 82, -11, 59, -120, -77, -35, -112, -95, 39, 103, 15, 70, 19, -25, -12, -6, -32, -119, -123, 89, -63, -7, -27, 56, -2, -96, -77, 88, 17, 107, -53, -26, 32, -50, 52, -3, 44, 103, -79, -71, -101, 56, -37, 77, -24, -51, -29, -94, 114, -125, 83, 84, 18, 122, -19, -96, -112, 72, 124, -45, -94, -87, 24, -128, 26, 122, 117, -9, -98, -71, 120, -2, 80, -57, -61, -69, 119, 29, -96, -110, -48, 112, -110, -9, -114, 6, -44, -67, -102, 49, -90, -91, 121, 84, 4, 23, -109, -66, -66, 125, -43, 116, -84, -10, 78, 31, 91, 122, -91, 127, -117, -120, -16, 75, 109, 112, 76, -121, -83, 43, 49, 40, 88, -124, 95, -42, 6, 41, 87, -86, 19, -22, 45, -67, -36, -69, 97, -15, -34, -39, 107, -34, 71, 42, -112, 53, -115, -52, 59, -34, 85, 5, -55, 34, -3, 2, 9, 109, 27, 49, -11, -37, 124, 20, 22, -106, 118, -82, -69, -5, 35, 15, -3, 29, 124, 43, 12, 100, 77, -21, -125, -26, 15, -104, -102, 94, -36, -66, -110, 119, -13, 7, 12, 100, 88, -40, -70, -16, -34, -111, 122, -39, -77, 48, -92, -63, -68, 83, -98, -119, -41, -101, -53, -53, 18, -14, 27, -125, -51, 126, -31, -51, 10, 30, 82, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	}

	 /*********************************************************************************************************
	 **											HEARTS														 **
	 *********************************************************************************************************/
	
	private static byte[] getH2(){
		return new byte[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 15, 0, 0, 0, 20, 8, 2, 0, 0, 0, -35, -91, -16, 69, 0, 0, 1, 31, 73, 68, 65, 84, 120, -38, -115, -109, -65, 78, 2, 65, 16, -121, -25, 49, -80, 50, 116, 22, -42, 22, -106, 86, 52, 118, 20, -106, 22, 118, -38, 25, 42, 67, 99, 99, 103, 43, 79, -94, 15, -95, -113, -128, 13, 5, -119, 81, -113, 0, 87, 32, 57, 92, -65, -67, 57, -26, 38, -53, -110, -72, -7, -35, -97, -99, -7, 102, 110, 102, 22, 100, -15, 112, -9, 127, -119, -33, 44, 31, -17, -53, -73, -41, -80, 90, -123, 16, 126, -34, -57, -33, 47, -49, 41, 61, 31, -34, -86, -90, -93, 39, -27, -4, 34, -64, 0, -44, -48, -60, -3, -106, 101, -56, 45, 62, -88, -52, 108, 112, 45, 92, -120, 28, 97, -49, -94, 54, 101, 106, -6, -26, 10, -59, 114, -21, 69, -71, -102, -55, 91, -108, 65, 13, 77, 28, 86, -118, -31, -91, -72, -68, -64, 66, -128, -91, 111, 105, 124, 42, 54, 52, 106, 91, 100, -76, 89, -60, -69, 19, 101, -24, -81, -2, 121, 86, -116, -62, -70, 52, -29, 94, -70, -23, -78, -86, 24, 87, 75, 127, -10, -50, 118, 21, 79, -54, -75, 104, -10, 12, -115, -37, 15, -37, -69, -28, -29, -12, -60, 11, -109, 29, 42, 47, 124, -35, 123, 37, 65, -103, -70, 37, 102, -28, 73, 46, -103, 30, 31, -103, -30, -7, 87, -107, -94, -108, -18, 93, -86, -106, 102, 100, -101, 77, 80, -102, -80, 73, -9, 48, 79, -29, -32, -64, 35, -70, -19, 76, -47, -35, -69, -16, 64, -21, -94, -16, 115, 72, 68, -81, -118, -55, -28, -96, -125, -46, -97, 41, -11, -16, -49, -40, -34, 35, 93, 99, 127, 5, 22, 95, -87, 46, 16, -23, 109, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	}
	
	private static byte[] getH3(){
		return new byte[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 15, 0, 0, 0, 20, 8, 2, 0, 0, 0, -35, -91, -16, 69, 0, 0, 1, 30, 73, 68, 65, 84, 120, -38, -115, -110, -95, 114, 2, 49, 20, 69, -13, 25, -96, 58, 117, 8, 52, -94, 18, 85, -125, 67, 32, 43, 112, -32, 58, 85, 59, -104, 26, 92, 109, -5, 37, -16, 17, -16, 9, 96, 16, -52, 48, -76, -53, -76, -84, -95, -61, 118, 57, -39, 23, 30, 73, -128, 14, -103, 11, -124, -5, 78, -14, 110, -78, 107, 126, -122, -55, -19, 50, -14, -77, -101, -49, -118, 43, -125, -46, -119, -2, 30, 60, -93, -1, 105, 97, -112, -91, 55, 47, -67, 91, 105, 80, -12, 53, 30, -31, -6, 82, -102, -110, 48, -56, 108, -6, 93, 43, -2, -56, -92, 84, 54, -99, 8, -6, -101, -90, -74, -7, -47, 119, 116, -6, -44, 81, 107, -7, -15, -82, 27, 111, -33, 94, -3, 93, 12, -100, 47, -84, -65, 44, -45, 12, 81, 53, -90, 53, 3, -47, -93, -110, -91, 63, -37, 45, 21, 125, 53, 3, -53, -24, -29, 87, 81, 64, -5, -119, -117, -3, -98, 47, -100, -128, 94, 63, 54, 85, 28, -1, -4, -66, 9, -96, 64, 64, -77, -102, 0, 72, 15, 42, 103, 93, 61, 52, 28, -51, -20, 92, 20, -128, 36, 15, -57, 85, -1, 50, -115, -24, -93, 7, 56, -47, -53, 122, 77, 68, 62, -99, -117, 52, -116, 58, -114, -90, 53, 89, -3, 5, 56, -126, -30, 7, -12, -30, -2, -114, 112, 121, 110, 11, -85, 36, -63, -95, -87, -53, 93, 94, 60, -128, 96, -122, 15, -124, -36, -82, 127, -45, 50, -40, -126, 71, 6, 35, 50, -117, 106, 5, -23, 3, -113, 6, -17, -96, -35, -75, 100, -48, 1, -59, 76, 112, -89, -69, -121, -84, -113, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	}
	
	private static byte[] getH4(){
		return new byte[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 15, 0, 0, 0, 20, 8, 2, 0, 0, 0, -35, -91, -16, 69, 0, 0, 0, -17, 73, 68, 65, 84, 120, -38, -115, -110, -79, 14, -63, 80, 20, -122, -5, 24, 76, 98, 51, -104, 13, 70, -109, -59, 102, 48, 26, 108, 108, 98, 18, -117, -59, 102, -27, 73, 120, 8, 30, -127, -91, 67, 19, 65, 27, 116, 33, -115, -21, -65, -67, -19, -33, 91, -67, 109, 122, -14, -91, 105, -49, -7, -18, -55, -71, 39, -75, -98, -85, 121, 121, -84, -68, -62, 107, -67, -4, -72, -82, 8, 35, -79, 31, -117, -87, -111, -5, 126, 39, -30, 96, 82, -38, -34, 108, -4, -9, 68, -29, -81, -17, 27, 108, -108, -77, -8, -57, -125, -48, -126, 121, -53, -101, -116, -2, 64, 99, -111, 14, -106, 12, -10, -5, 124, -54, -75, -35, -31, 64, -57, -39, 110, 68, 16, -64, -48, -25, 102, 53, 101, -29, 52, 37, 121, 44, 107, -33, -6, 61, 66, 3, -61, -32, -109, 54, -123, -60, 70, 99, 125, 101, 102, -5, -38, -19, 40, -94, -83, 5, 1, 94, 84, -122, 54, -99, -56, -58, 46, -27, -27, -62, -5, 97, -66, 92, -5, -46, 110, 1, 110, 13, -93, -85, 12, -96, -51, -116, -76, 49, -91, -22, 90, 28, -46, 118, -102, 13, -3, 126, 5, 1, 83, -38, -96, -84, 109, -41, 107, 0, -1, 70, 22, 122, -22, 51, -79, -115, -48, 102, -58, -78, -85, -107, 60, 18, 59, -50, -4, 0, -74, 77, -124, 71, 24, 24, -66, 108, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	}
	
	private static byte[] getH5(){
		return new byte[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 15, 0, 0, 0, 20, 8, 2, 0, 0, 0, -35, -91, -16, 69, 0, 0, 1, 5, 73, 68, 65, 84, 120, -38, -115, -111, -67, 18, -63, 64, 20, 70, -9, 49, -88, -116, 78, -95, 86, 40, 85, 26, -99, 66, -87, -48, -47, 25, 85, 70, -93, -47, 105, -109, 39, -31, 33, 120, 4, -102, 20, -103, -55, 32, 25, -92, 97, 54, -42, 23, -105, -69, -119, -4, -39, -100, 25, -101, -69, -57, -18, -34, 47, -30, -70, 52, -2, 71, -16, -20, 126, -40, -85, -84, -31, 88, -90, -74, 47, -13, 41, 81, 96, -77, -93, -19, -121, -25, -107, -37, -2, 108, 76, -88, -100, 1, -101, 29, -31, 79, 70, 4, -83, -31, 62, 92, 73, -109, -76, -91, 44, -79, -67, -31, -128, -96, -67, -125, -35, -106, 43, 105, 126, 109, -20, 93, 100, -97, -6, 61, -126, -20, 103, 16, 68, -31, -68, -81, -124, -2, 120, -107, -8, -40, 58, 19, 41, 35, -108, 10, -15, 72, 121, -34, -84, 19, -10, -79, -37, 1, -56, 50, 59, 63, 41, -47, 28, 57, 64, -16, 12, -37, 100, -6, -88, 107, -37, 109, -73, 24, -6, 16, -104, 96, 1, -31, 112, -33, 44, 36, -20, 56, -36, 55, 46, -93, 109, -89, -39, -56, 67, 127, -4, 111, 37, 102, 91, 38, 18, -27, 87, 92, -122, 51, -43, -74, 93, -81, -31, -121, -50, 69, -46, -82, 97, -96, -126, 67, -71, 105, 52, -128, 10, 105, -126, 102, -36, -45, -49, 8, 67, 117, 91, 45, -56, 1, -62, -82, 86, -16, -89, -68, -8, 112, 26, 86, -31, 16, 47, -112, -49, 113, -25, 123, -111, 57, 94, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	}
	
	private static byte[] getH6(){
		return new byte[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 15, 0, 0, 0, 20, 8, 2, 0, 0, 0, -35, -91, -16, 69, 0, 0, 1, 46, 73, 68, 65, 84, 120, -38, -115, -109, -83, 78, 3, 65, 20, -123, -25, 49, 90, 69, 112, 8, 52, 2, -119, -62, -32, 16, 72, 68, 29, 117, 4, 69, 48, 24, 28, 22, -98, 4, 30, 2, 30, -95, -104, -118, 38, -92, 101, 27, 96, 13, -28, -122, -27, -101, 61, -61, -99, -35, -55, -90, -31, -26, 100, 127, -18, 124, 51, 115, -18, -35, -39, -16, 113, 115, -7, 127, -123, -30, 125, 113, 127, -9, -11, 50, 107, -38, -32, -31, -19, -15, -95, 71, -65, 95, -99, -69, 24, -117, -108, 89, -45, 9, -26, -64, 9, 8, -21, -117, 51, 61, 125, -34, 94, -1, -44, 117, 51, 20, -84, -110, 105, -87, 126, 126, 42, 86, 85, 124, 87, -107, 51, 97, 61, -99, 32, -26, 57, -54, -76, 56, 54, -99, 68, 99, 102, 92, -59, -96, 68, 83, -100, 80, -52, -8, 88, 117, 122, 34, 15, -103, 38, -91, -84, 91, 84, 102, 80, -119, 118, -45, -44, -70, -119, 94, 29, 31, -95, 72, -73, 1, -51, -14, 106, 14, 73, 122, 39, 64, 74, -76, 119, -96, -41, 68, 118, 51, -93, -92, 76, 47, 15, 15, 80, -77, 49, -16, 32, 108, -128, -90, -63, 120, -24, 110, -126, -73, -41, -3, -67, 72, 115, 67, -59, -128, -28, 7, -127, -113, -81, 76, -97, 54, -61, -100, -45, -71, 30, -77, 68, 47, 118, 119, -112, -97, 59, -67, -70, 124, 79, -67, 38, -38, -65, 14, -26, 28, -11, 122, -88, 33, -47, -13, -19, 45, 110, -76, -71, -21, -101, 100, -10, -35, 38, 97, 72, 70, 90, 99, 69, 79, -72, 122, -122, -93, 34, 44, -52, -57, -93, 40, 118, -8, 59, 88, -59, 15, -63, -52, -60, -116, 71, -65, -105, 25, -114, 2, -75, -42, -18, -78, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	}
	
	private static byte[] getH7(){
		return new byte[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 15, 0, 0, 0, 20, 8, 2, 0, 0, 0, -35, -91, -16, 69, 0, 0, 0, -11, 73, 68, 65, 84, 120, -38, -107, -109, -65, 14, -63, 80, 20, -121, -49, 99, 48, -119, -51, 96, 54, 24, 77, 22, -101, -63, 104, -80, -79, -119, -87, -79, 88, 108, 86, -98, -124, -121, -32, 17, 88, 12, 77, 26, -76, 65, 23, -46, -88, 95, -99, -10, 56, 110, -21, 95, -13, -91, -67, -9, -100, -81, -23, -17, -34, -101, -46, 105, 108, -3, 14, -15, 35, -4, 120, -39, -77, 105, 108, 31, -121, 125, -16, -43, 102, -115, -68, 65, -9, 63, 27, 92, 54, -21, 52, 98, 35, 3, 107, -28, -11, 58, -103, -8, -85, 37, -85, 120, 45, 82, 31, -59, -73, -10, -51, -9, -39, 62, 44, -26, 110, -69, 21, -37, 24, -91, 57, 79, 70, 18, 3, -110, -44, -77, 109, -119, -127, -127, -82, -45, -66, -39, 48, 64, 85, -17, -122, 110, 101, -40, 48, 88, 69, 116, -93, 69, -69, 122, -51, 64, -10, 14, -21, 51, 90, -90, -83, 99, 96, -101, 77, -37, -87, 86, 52, 18, 3, 95, 48, 90, -64, -76, -81, -82, 43, -21, -53, -80, -19, 114, 73, -64, -42, -122, 65, -64, 54, 34, -23, 22, -13, 98, 99, 89, 108, 35, 70, 90, -115, -19, 109, -79, -64, 19, -119, -127, -77, -108, 58, -18, 50, 32, -98, 0, -57, 122, -2, 19, -120, 40, 117, 13, 109, -13, 57, 38, -118, -111, -100, 118, -44, 75, -22, -102, 59, -88, 97, 73, 59, 50, 27, -42, 101, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	}
	
	private static byte[] getH8(){
		return new byte[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 15, 0, 0, 0, 20, 8, 2, 0, 0, 0, -35, -91, -16, 69, 0, 0, 1, 48, 73, 68, 65, 84, 120, -38, -115, -109, -95, 78, 3, 65, 16, -122, -9, 49, 90, 69, 112, 8, 52, 2, -119, -62, -32, 16, 72, 4, -18, 112, -51, 41, -126, -63, -32, -80, -16, 36, -16, 16, -16, 8, 96, 42, -102, 16, -24, 53, 45, 103, 32, 123, 28, -33, -20, 76, 102, 55, 71, 27, -40, -2, 77, 110, -2, -7, 110, 58, 51, 119, 13, -85, -21, -117, -1, 43, -108, -63, -20, -18, -10, -13, -27, -71, 79, -121, 11, -62, 33, -67, -68, -100, -88, -26, 15, -9, 66, -59, -88, 116, -57, -89, -17, 49, 29, 64, 70, 83, -90, -33, 112, 72, 101, 122, 81, 87, -88, 125, 122, -44, 98, 90, -49, 126, 39, 29, 82, -54, -96, -80, 56, 63, 67, 95, 77, -29, -88, 56, 117, 37, 55, -92, -82, 72, 41, -125, -116, -74, 58, 49, 106, -40, -100, -98, 112, -61, -64, 20, -102, 4, -14, -33, -43, 112, -109, 105, 52, -51, 105, -126, 81, -44, -31, -62, 87, -103, -23, -9, -29, 35, -28, 59, -15, -100, 47, -98, 1, -108, 65, 70, -109, -2, 110, -37, 53, -5, -93, -23, -70, -54, -12, -37, -31, -127, -22, -29, -26, -22, 55, 76, 9, 32, 103, -116, -58, 90, 95, 59, -11, -106, -23, -41, -3, 61, 84, 62, 75, 26, 37, 44, 31, 16, -95, 98, 70, -5, 76, -12, -93, 78, 46, 17, 35, 27, 51, 122, -74, -69, -125, -4, 101, 18, 40, 57, -26, 123, -7, 20, -122, -127, -5, 55, 61, -35, -34, 42, 59, 33, 84, -45, -73, 36, -17, 122, 114, 2, -33, -23, 120, -28, 51, 117, -99, 76, 9, 55, -104, 82, 48, -95, -57, 35, 68, 3, -7, 127, -48, -119, -54, 67, 86, -117, -2, 0, 118, 62, -106, 84, 69, -19, -41, -3, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	}
	
	private static byte[] getH9(){
		return new byte[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 15, 0, 0, 0, 20, 8, 2, 0, 0, 0, -35, -91, -16, 69, 0, 0, 1, 41, 73, 68, 65, 84, 120, -38, -115, -110, -79, 78, 2, 65, 16, -122, -17, 49, -76, 34, 118, 22, -42, 20, -108, 86, 52, 118, 22, -106, 22, 116, -40, 17, 42, 67, 67, 99, 103, -85, 79, -126, 15, 1, -113, -96, 13, 5, 9, 81, -113, 0, -41, 104, 56, -41, -17, -4, -121, -39, -27, -50, -126, -53, -97, 101, 119, -10, -37, 127, 118, 103, -56, 54, 15, -9, -57, 43, 75, 23, -37, -57, 113, 49, -101, 126, -67, -67, -122, 16, 24, 63, 95, 38, 68, 14, -24, -11, 104, 32, -79, -15, 83, 20, -31, -16, -29, 12, -112, 51, -111, -106, 101, -13, 35, 67, -92, 87, -61, 62, 90, 60, 63, -7, 54, 25, 56, -103, -26, -63, 94, 88, -74, -70, -21, 33, -82, -21, -87, -15, 32, -110, 102, -61, 94, -104, -47, -66, 81, -39, -4, 69, -112, 18, -106, -95, -116, 116, 126, 123, -125, 60, -87, -106, 46, 79, -88, -27, 81, 52, 111, 48, -6, -29, -6, 10, 57, -51, 117, 21, 65, -52, 61, -82, -120, -47, -10, -54, -35, 78, 73, -119, 48, -6, -45, 35, -3, -34, -67, 68, -75, 10, -62, -43, 58, 37, -52, 104, -100, -102, -115, -4, -121, 94, 118, -38, 18, -99, -81, 17, 126, -98, -21, -119, -119, 52, -94, -94, -108, 86, 15, 80, -61, 69, 115, 49, -93, 23, 23, -25, 53, 17, -43, -124, 78, -7, 73, 69, 34, -83, -37, -89, -57, -80, 44, 75, 43, -85, -47, -13, -77, 22, 63, -116, 24, 124, -25, 121, -43, 112, -39, 39, 85, -62, 72, 88, 69, 35, -74, -55, 104, -101, 62, -39, -1, -91, -60, -96, 108, 126, 122, -126, 82, -89, 102, -19, -60, -96, 95, 101, -86, -113, 87, 85, -70, -125, -18, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	}
	
	private static byte[] getHT(){
		return new byte[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 15, 0, 0, 0, 20, 8, 2, 0, 0, 0, -35, -91, -16, 69, 0, 0, 1, 61, 73, 68, 65, 84, 120, -38, -107, -110, -95, 78, 4, 49, 16, -122, -25, 49, 64, 93, 112, 8, 52, 2, -119, -62, -32, 16, 72, 4, 14, 28, 57, -75, -63, 96, 112, 88, 120, 18, 120, 8, 120, -124, -61, -100, -72, -28, 2, -20, -27, 96, -59, 66, 118, 41, 95, -5, 119, -121, -26, 64, -64, -28, -33, -51, -52, -4, 127, -89, -19, 116, -20, -11, -78, -6, 59, -116, -17, -19, -22, -30, -27, -18, 54, 36, 43, -71, -26, -31, -2, -77, 105, 66, -37, -30, 100, 117, -44, -75, 109, 24, 108, 121, 126, 38, -96, 8, 93, 23, 83, -23, 79, 72, -46, -34, 31, 39, -95, 48, 82, -117, -15, -119, 111, -27, -42, -121, -98, -92, -59, 26, -123, 33, 5, 43, 37, 100, 36, 77, 101, 62, -22, 58, -85, 79, -113, 57, -97, -45, 108, 69, -24, -84, 113, 69, 82, -66, 53, 106, -9, -95, -22, -93, 67, 50, -77, -101, 107, 93, -64, -120, -127, 43, -36, -89, 27, -94, 4, 117, 34, -85, -13, -22, -92, -114, -121, -18, 58, -18, 83, -86, 117, 61, 123, 62, -40, 7, -79, 94, -22, 20, -66, 78, -55, 122, 81, -126, -54, 89, 25, 72, -83, 101, -65, -85, -97, -10, 118, -127, -85, -15, -27, -112, 17, 85, 10, -2, -87, -98, -17, 108, 3, 87, -29, -57, -39, 72, 106, 81, -91, 32, -85, 105, -83, -85, 117, 125, -2, -91, 58, -9, 100, -74, -75, 25, 49, -44, -58, 87, 127, -40, 33, 83, 9, -79, 81, -68, -114, 2, -81, 93, -6, 12, -116, 88, -98, 51, -65, -4, 116, 99, -76, -94, -114, 77, 28, -26, -124, -5, -7, 49, -78, 26, -72, 90, -95, -45, 125, -1, 61, -125, 36, 109, -70, -66, 6, 24, 52, 17, 10, -25, 85, -11, 115, 98, 73, 126, 1, -34, 86, -87, 17, -70, -59, -93, 118, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	}
	
	private static byte[] getHJ(){
		return new byte[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 15, 0, 0, 0, 20, 8, 2, 0, 0, 0, -35, -91, -16, 69, 0, 0, 0, -62, 73, 68, 65, 84, 120, -38, 99, -8, -44, 94, 77, 60, 98, -64, 35, -9, 31, 6, 16, -86, 63, -42, 22, -29, 66, 112, -43, 112, 17, 18, 85, -65, 47, -51, -58, -123, -32, -86, -31, 34, 12, -17, 115, 82, 112, 33, -124, 106, -104, 8, -119, -86, -33, 37, 68, -32, 66, 112, -43, 112, 17, 18, 85, -65, 9, -15, -59, -123, -32, -86, -31, 34, 36, -86, 126, -19, -31, -124, 11, -63, 85, -61, 69, 72, 84, -3, -46, -54, 12, 23, -126, -85, -122, -117, -112, -88, -6, -103, -114, 6, 28, 1, -7, -56, 92, -72, 106, -72, 8, 3, -78, -46, -97, 119, -17, -64, 53, -64, -45, 9, 80, 16, -95, -6, -111, -94, 60, -112, 2, -110, -97, -5, -102, -2, -2, 5, -55, 1, -43, 1, 35, 2, -56, -8, -1, -25, 15, 80, -11, -105, 51, -89, -31, 106, 64, -86, -127, 8, 57, 116, -127, 0, -88, 13, -94, 20, -56, 0, -102, 2, 81, 3, 86, 45, 41, 1, 68, 64, 7, -4, 122, -9, -18, 63, 6, 0, 10, 2, -91, 32, 106, -128, 8, 0, 22, -28, 62, -75, -39, 90, 39, 27, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	}
	
	private static byte[] getHQ(){
		return new byte[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 15, 0, 0, 0, 20, 8, 2, 0, 0, 0, -35, -91, -16, 69, 0, 0, 1, 61, 73, 68, 65, 84, 120, -38, -115, -110, -85, 78, 3, 81, 16, -122, -49, 99, -76, -118, -44, 85, 84, 35, -112, -88, 26, 92, 69, 37, 2, 7, -114, -96, 54, -104, -102, -70, 90, 120, -110, -10, 33, -32, 17, -118, -87, -40, -124, 0, -69, 1, 86, -108, -26, -76, -53, 55, 103, -74, -77, 87, 18, 38, 127, -78, 51, 115, -2, -71, -81, -5, -102, 71, -1, -121, 107, -40, 31, -85, -27, -49, -53, 58, 15, -126, -126, -7, 121, 127, 91, -78, 49, 20, 24, -58, 19, -15, 94, -80, -35, 102, -49, 79, -58, 113, -23, -35, -75, 106, 53, 106, 93, -76, 66, -63, 6, -40, -92, -55, -1, 22, 42, 67, 115, -23, -51, 21, -40, 37, -119, 122, 15, 89, 22, 63, 62, -32, 33, -109, -92, 56, 10, -3, -32, 20, 54, 113, -46, 98, -96, 74, -114, 16, 15, -110, -53, 105, 17, -32, 61, 79, -62, 46, 93, -95, 63, -52, 6, -84, -20, -9, 98, 38, 108, -86, 104, 110, -86, -73, -39, 52, 102, -71, -36, -5, -28, 66, -93, -87, -123, -34, 6, 41, -76, -103, -126, 109, 115, 116, -78, -85, 4, -9, 54, 62, 55, 3, -67, 10, 38, 86, -91, -58, -34, -17, 59, -40, 80, -15, -77, -29, 26, -5, -11, -20, 84, -81, 72, -33, -24, 6, 115, 18, 80, 78, -55, -125, -20, 36, 8, 27, 80, 42, -53, -78, -69, -40, 31, 33, 27, -116, 71, -61, -30, 45, 76, -115, 9, 44, 119, 85, -28, 58, -68, -15, -47, -42, 9, 96, 3, 26, 64, -69, 118, 23, 21, 82, -72, -51, -32, -124, 55, -53, 36, -35, 71, -111, 58, -27, -58, -31, 106, -38, 15, 78, 97, 3, 24, -51, -65, 46, -4, -36, -90, 83, 92, -6, -34, -12, 123, 10, -101, -75, 91, -68, -121, -16, 11, 4, -33, -81, 73, 13, 112, 43, -126, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	}
	
	private static byte[] getHK(){
		return new byte[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 15, 0, 0, 0, 20, 8, 2, 0, 0, 0, -35, -91, -16, 69, 0, 0, 1, 21, 73, 68, 65, 84, 120, -38, -115, -110, -95, 78, 3, 65, 20, 69, -25, 51, 64, 53, 56, 4, 26, -127, -84, -62, -32, 16, 72, 4, 14, 28, -87, 106, 106, 48, 56, 44, 124, 9, 124, 4, 124, 66, 49, -120, 38, -124, 118, -101, -74, 107, -38, 52, 44, 103, -10, 102, -17, 14, -61, -90, 97, 114, -109, -50, 123, -9, -12, -10, -51, 76, -61, -14, 126, -8, 127, 5, 125, 84, -51, -54, -20, -14, -19, -75, -38, 110, 101, 77, -98, 30, -61, 98, 116, -117, 76, -85, -108, -80, -115, -50, 94, -98, -23, -20, -94, -41, -17, 99, 53, -39, -88, 19, -26, -125, 107, 100, 90, 37, 34, -52, 77, 126, 68, -51, 48, -65, -71, 66, 45, 93, -105, 76, -4, 93, -106, -98, 65, 77, -44, 65, 23, -105, 23, -98, 97, 83, 20, 49, -43, 52, 30, 50, -51, 62, 30, -82, 89, -85, -121, 59, 1, 82, 78, 19, -112, -50, -112, -94, -111, -98, -98, -97, 33, -45, -15, 112, -11, -83, -15, 29, 108, -71, 86, 78, -5, -126, -69, -23, -81, -45, 62, -86, -70, 22, 7, -112, 107, -19, -94, -119, 39, -17, 23, -3, 121, 114, -116, -78, -56, 116, 47, 64, -54, 105, 78, 73, -23, -121, -28, -66, -119, 108, -23, -55, -47, 33, 50, -115, 71, -103, -50, -58, -107, -117, 65, 57, 109, -61, -1, 85, -90, 39, -75, -91, 63, 14, 122, -90, -39, 75, -23, -109, 41, -98, 102, -112, -9, -105, 70, 49, -66, -103, -66, -95, -9, -9, 80, 75, -41, -91, -108, -66, 26, -15, 116, 126, 0, -40, 63, -114, 127, 107, -47, -52, -105, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	}
	
	private static byte[] getHA(){
		return new byte[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 15, 0, 0, 0, 20, 8, 2, 0, 0, 0, -35, -91, -16, 69, 0, 0, 1, 21, 73, 68, 65, 84, 120, -38, -115, -110, -83, 78, 3, 65, 20, 70, -9, 49, 64, 53, 56, 4, -70, -94, 18, -123, -87, 67, 32, 17, -72, -42, 53, 85, 13, 6, -125, -85, -123, 39, 105, 31, 2, 30, -95, -104, -118, 77, 54, 109, -73, 41, -84, -127, -52, -80, -100, -55, 29, -18, -36, -99, -112, -108, -55, 39, -18, -49, -39, 59, -33, -52, 108, -15, -2, 56, -5, -65, -118, 44, -1, -104, 63, -76, -65, -117, 56, -89, 15, -9, 19, -85, -35, 114, 17, 89, -25, -120, -77, 110, -121, -34, 79, 71, -51, -21, -117, -50, 38, -90, -46, -95, -55, -83, -66, -101, -58, -73, 94, 104, -30, -84, 91, -20, -57, 119, 42, 107, 90, -83, 91, -96, 67, 39, -45, -58, 122, -121, -82, 111, 111, 84, -97, 111, 43, 117, 44, 1, 21, 11, 36, 26, 91, 58, -108, 3, 105, 76, 61, -47, -37, -21, -95, -88, 124, 126, -46, -63, -92, 95, 117, 45, 41, 117, 101, 18, -83, -69, -45, -34, 92, 93, -58, 51, 56, 39, 31, 71, -102, -122, 72, -121, 97, -125, -108, -105, 3, -107, 123, 84, 38, -46, -42, -76, 84, -104, -28, 125, -78, 30, -23, 106, -48, 71, -42, -76, 84, -112, 94, 17, 93, -87, 20, 89, 35, -69, 111, -67, -57, 72, -105, 23, -25, 108, -47, 30, 91, 48, -112, -127, 14, 7, 58, -74, 96, 2, -67, 62, -21, -27, 15, -2, -41, -126, -119, -76, -34, 29, 127, 2, -87, 85, 53, -117, -37, -62, -112, -122, -105, 79, -7, -23, 73, 38, -26, -23, 120, -56, 31, -88, -43, -104, -87, 112, -118, 16, -106, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	}


	 /*********************************************************************************************************
	 **											SPADES														 **
	 *********************************************************************************************************/
	
	private static byte[] getS2(){
		return new byte[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 15, 0, 0, 0, 20, 8, 2, 0, 0, 0, -35, -91, -16, 69, 0, 0, 1, 24, 73, 68, 65, 84, 120, -38, 125, -110, 49, 110, -62, 64, 16, 0, -9, 115, 17, -123, -117, 43, 92, -96, 84, -108, -87, 82, 80, 32, -53, -115, 43, 26, 36, -14, 8, -14, 6, -1, -63, 109, -14, -127, -48, 0, 29, -99, -107, 16, 4, -70, 76, 110, -19, -11, 29, -60, 25, 89, -106, -67, 55, 123, -34, -35, -77, -84, 34, 94, 55, -101, -90, 105, 78, -25, 111, -17, -3, -2, 120, -88, -21, 122, -107, 34, -53, 30, -44, -74, 109, 125, 10, -55, -53, -120, -50, 38, -17, 94, 85, 94, -42, -21, -63, -82, 2, -20, -31, 71, 96, -87, -22, -7, -75, -53, -78, 52, -101, 114, 117, -101, -9, -35, -37, -11, -38, 69, 6, -69, 12, -80, -68, -35, 127, 124, -98, -66, 52, -71, 40, 10, 106, -45, 124, 114, -118, 30, 89, -12, -32, -47, -24, 34, -62, -118, -79, -120, -52, -57, 49, -37, 34, -14, 60, 2, -33, 81, -107, 10, 45, 40, 79, 35, 116, 93, 94, 46, -100, -111, 5, -1, -74, 49, 116, 32, -64, 0, 6, 123, 118, 7, -19, -22, -82, -36, -7, 66, -68, 116, 107, -77, -127, 29, 42, 15, 116, -106, -40, -45, -57, -87, 93, -88, -12, 20, -97, 121, -68, -54, -107, -40, 113, -71, -52, -124, 72, -98, -25, -119, -51, -69, 115, -114, -69, -115, 12, 72, -53, 83, -44, 17, 23, -80, 115, -42, 1, -69, -108, 44, -53, -12, 65, -78, 64, -4, -69, 98, 55, 41, -12, -86, -102, 76, 2, -90, 82, -73, -107, 110, -16, 63, -87, 38, 15, 1, -1, 47, -40, -86, -3, 0, 100, 84, 46, -39, 104, 110, -74, 35, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	}

	private static byte[] getS3(){
		return new byte[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 15, 0, 0, 0, 20, 8, 2, 0, 0, 0, -35, -91, -16, 69, 0, 0, 1, 27, 73, 68, 65, 84, 120, -38, 125, -110, -79, 110, -62, 48, 16, 64, -17, -25, 16, 67, -122, 12, 30, 16, 19, 99, 39, 15, 25, 42, -44, -59, 19, 11, 18, -3, 8, -8, -122, -4, 67, 86, -6, 3, -19, 82, -70, 33, 36, 20, -75, 12, 68, -19, -117, -125, -99, 51, 36, 125, -78, -112, -29, 123, -66, -69, 28, -111, -75, -25, -29, -16, -2, 59, 2, -95, 117, 64, 86, -98, -1, -19, 85, -96, -75, -99, 115, 99, 118, -45, -92, -74, -13, 84, 85, -59, 105, 92, -121, -29, -41, 77, -65, 94, 9, -71, 64, 107, -65, 60, -128, -47, -55, -89, -13, -119, -108, -100, -36, -20, 104, 44, 3, -69, -19, 54, 118, -62, 126, -87, -112, -25, 20, 18, 124, 95, 126, 124, -57, 13, 21, -118, -94, -48, 81, 41, 82, 98, 15, 116, 111, -83, -67, -117, -118, 85, -24, 30, -72, 70, -57, 54, 69, -98, 20, 101, 89, -34, 77, -112, -5, 90, 72, -20, -41, -51, -26, 113, -28, 12, -96, -73, 23, 10, 106, -67, 125, -18, 89, 117, 93, 71, -101, -126, 81, 72, 108, -104, -51, 103, -4, -110, 70, -65, 110, 111, 19, 30, 92, 76, 32, -90, -113, -121, -67, -51, -16, -115, 49, 108, -116, -121, -51, -128, -99, -25, 57, 49, 74, -45, 43, 127, -115, 9, 112, -46, -87, -100, -13, -40, 105, -83, 13, 52, -57, -25, 70, -128, -79, -16, 72, -102, -40, 55, -101, 60, 32, 89, -106, 97, -96, -114, -63, -56, -77, -128, 76, 61, 99, -33, 119, -41, -58, 52, 32, 19, 15, -9, 6, 47, 80, 118, -94, -8, 3, -54, 39, 61, 118, -30, 108, 95, 122, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	}

	private static byte[] getS4(){
		return new byte[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 15, 0, 0, 0, 20, 8, 2, 0, 0, 0, -35, -91, -16, 69, 0, 0, 0, -30, 73, 68, 65, 84, 120, -38, -115, -110, 61, 14, -126, 64, 16, -123, -25, 114, -58, -62, -126, -126, -62, 88, 81, 90, 89, 80, 24, 67, 99, 101, 99, -126, -121, -64, 51, 112, 7, 110, -95, -107, 53, -119, 33, 106, 67, -42, 7, -61, 62, -42, -80, 107, -8, 66, -63, -66, -9, 101, 50, -4, -56, 57, -64, 37, -49, -21, 103, 109, 122, 24, -54, 41, 64, 85, 85, 109, -37, -86, -51, -48, 111, 99, 112, -45, 52, -58, 50, -38, 71, 31, 24, 108, 28, -104, 123, -20, 107, 81, -104, 95, 70, -5, 48, -31, -2, -72, -39, -123, 7, 88, -55, -34, 33, 77, -45, -78, 44, 85, 125, 125, -34, -76, 41, 72, -22, -112, 101, 25, 30, 78, 109, 119, 31, 10, -78, 115, -64, 96, -83, -79, 12, 58, -38, 20, 100, 107, -63, 67, -80, -58, 27, 68, -62, 35, -99, -47, -26, 91, -61, -115, 38, 30, 59, -23, -63, 48, 118, -40, 94, 67, 38, -119, 101, -80, -79, -88, 22, 88, -99, -99, -57, 94, 111, -42, -18, -32, 63, -64, -20, 108, -4, 0, 115, -19, 40, -118, -30, 56, -98, 99, 67, -21, 108, -128, 111, 49, -67, -24, -23, 17, -102, -84, -62, -48, 102, 34, -53, 48, -76, -103, -56, 34, 12, 109, 38, 95, -37, 16, 73, -87, -40, -43, -123, -29, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	}

	private static byte[] getS5(){
		return new byte[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 15, 0, 0, 0, 20, 8, 2, 0, 0, 0, -35, -91, -16, 69, 0, 0, 1, 12, 73, 68, 65, 84, 120, -38, -123, -110, -79, 110, -62, 48, 16, -122, -17, -27, 80, 6, -122, 12, 25, 80, 39, 70, 38, 6, 6, -124, -78, 120, -22, -126, 4, 15, 1, -49, -112, 119, -56, 74, 95, -96, 44, -91, 91, -123, 84, 101, 1, 97, -63, -105, 56, 119, 4, 26, -105, 79, -106, -27, -60, -97, -83, -69, 63, -111, -91, -78, 63, 124, 94, -5, -40, 110, 54, -26, -56, -69, -14, -113, 109, 78, 107, 59, -25, -114, -65, -57, -41, -74, 83, -82, 17, -80, -51, 121, -74, -87, 39, -49, 115, 23, 65, 22, -118, -39, -117, 56, 50, 87, 80, 79, 103, -113, 61, -113, 35, 51, -91, -66, -7, 114, -63, -98, -59, -111, -87, 18, 42, -87, -86, -22, -16, -13, -19, 125, 93, 18, -3, 77, 31, -111, 73, 3, -55, 7, 27, -113, 97, 20, 69, -127, 52, 81, 90, 123, -67, 90, -59, 18, 36, -26, -69, 61, 86, -54, -78, -4, -85, 122, -17, 121, 111, -50, -35, 30, -67, -115, -62, 47, -63, -102, 107, 62, -66, 118, -95, 36, 26, 96, -85, -75, 89, -39, 8, 103, -62, -80, -66, -63, 94, 62, -40, 89, -106, 117, -25, 30, 59, 77, 83, 54, -104, 105, -97, -4, 51, -123, 98, 44, -45, 32, 48, -41, 54, -112, 60, 13, -79, 65, 56, 60, 114, -115, 53, -51, 34, 85, 100, -40, 64, 43, -35, -104, -97, -2, -63, -95, 34, 73, -110, 112, -88, 55, 62, 43, 35, 81, 100, -48, 16, 59, -64, -89, 25, 116, -72, 1, 77, -106, 62, 65, 107, 65, -128, 13, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	}

	private static byte[] getS6(){
		return new byte[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 15, 0, 0, 0, 20, 8, 2, 0, 0, 0, -35, -91, -16, 69, 0, 0, 1, 52, 73, 68, 65, 84, 120, -38, 125, -110, 49, 110, -62, 64, 16, 69, -9, 114, 81, -118, 20, 46, 92, -96, 84, -108, 84, 46, 92, 32, -53, 77, 42, 55, 72, -28, 16, 112, 6, -33, -63, 109, 114, -127, -92, 9, -23, 16, 82, 100, 5, 10, 44, -13, -40, -65, 59, 118, 44, -56, -105, -75, 50, -77, -49, 51, -13, 103, 112, -85, -65, -38, 110, 54, -97, -69, -113, -82, -21, -47, 110, -1, -35, 52, 77, 85, 85, 118, -21, -86, -111, -22, -70, 6, -22, -60, -94, -13, -103, 87, -66, 121, 93, -81, 5, 12, 52, -95, -33, -45, -79, -65, 37, -78, 4, -6, 37, -118, -94, 55, -47, -61, -49, -63, -104, 64, -13, -99, 93, -85, 87, -126, 106, -116, 115, -96, -117, -94, 40, -53, 18, 115, 66, 105, 6, 84, 65, 4, 74, -121, 69, -108, 91, 122, -103, 63, 18, 47, -17, -53, -27, 121, -98, 101, 25, 83, 83, 110, -118, -28, -9, -27, 50, -81, -9, -81, 55, -26, 37, -102, -12, 109, -37, -54, 0, 109, 40, -99, -28, 22, 94, 54, 98, -72, 97, -34, -79, -38, 34, 42, -48, -3, -65, -62, 110, -96, -25, 94, -29, 59, -106, 71, 99, 106, -58, -74, 35, 108, 74, -45, -21, -20, 121, -90, -96, -19, -117, 25, 4, -102, 59, 30, 69, -23, 24, 43, -118, -16, -32, -49, -78, 40, 114, -91, -45, 52, -75, 9, -22, -89, -99, 83, 58, 73, 18, 46, -84, 40, 86, -46, 40, 115, -113, 7, 97, 87, 26, -39, -26, -43, 55, 17, 78, 75, -63, -117, 48, -9, -28, 53, 54, 74, 38, 91, -112, -60, -114, -124, -71, -57, 40, -3, 85, 38, 98, 81, 88, 50, -58, 61, 68, 81, -56, -68, -114, -21, -48, -67, 49, 23, -61, -74, 95, 33, -118, -71, -2, -100, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	}

	private static byte[] getS7(){
		return new byte[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 15, 0, 0, 0, 20, 8, 2, 0, 0, 0, -35, -91, -16, 69, 0, 0, 0, -18, 73, 68, 65, 84, 120, -38, -107, -110, -79, 14, -126, 48, 16, -122, -17, -27, 8, 3, 67, -121, 14, -60, -119, -47, -55, -63, -63, 24, 23, 38, 23, 19, 124, 8, 124, 6, -34, -127, -73, -48, 9, 55, 55, 34, 46, -115, -2, -10, -46, -77, -108, -94, -15, 75, 67, -96, -9, 21, -114, -65, -91, -125, -27, -7, -107, 83, 93, -77, 70, 123, -53, 79, -101, -75, 63, -19, -46, 114, -23, -50, -63, -24, 110, 87, -79, -113, 85, -59, -38, -37, -34, -59, 104, -37, -106, 85, 44, 43, 29, 36, -27, -83, 7, 30, -5, -66, 103, -69, 105, 26, -103, -89, 77, 12, 52, 42, 109, -32, -107, 50, 79, -21, 24, -46, 6, 110, -4, 121, 90, 77, -64, 23, -3, 52, 32, 73, -119, -106, 19, -48, 40, -85, -9, -57, 16, -108, 34, 54, -30, -125, 106, -116, 65, 27, -95, 93, -116, -63, -81, 24, -13, -119, 57, -88, -122, -74, -76, -127, -104, -117, 9, -108, 47, 114, 127, -56, 22, 98, 89, 80, -62, 24, -39, -2, -127, 65, 50, 90, -21, -48, -58, -108, 82, 74, 91, -4, 54, -76, -125, -85, 124, 37, -27, -64, 82, -39, 109, -60, -84, 98, 80, -26, 64, 2, -46, 6, 126, 40, -117, 65, -87, -125, 119, 27, -15, 33, -17, 116, 6, 74, 44, 120, -103, 127, -102, -109, 25, 94, 59, 99, 8, 111, -9, -48, 118, -88, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	}

	private static byte[] getS8(){
		return new byte[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 15, 0, 0, 0, 20, 8, 2, 0, 0, 0, -35, -91, -16, 69, 0, 0, 1, 41, 73, 68, 65, 84, 120, -38, 117, -110, 49, 110, -62, 64, 16, 69, -25, 114, 81, 10, 10, -118, 45, 80, 42, 74, 42, 23, 91, 32, -28, -122, -118, 6, 9, 14, 1, 103, -16, 29, -36, 38, 23, 72, -102, -112, 14, 33, 69, 110, 45, -13, -104, -39, 29, 47, -112, 60, 89, -14, -52, -97, -17, -39, -11, -18, -56, -74, -32, 120, 56, 124, -99, 62, -5, 126, -128, -113, -17, 119, -46, -19, 61, -78, -55, -76, 109, -117, -81, 87, -81, 6, -73, 111, 16, 55, 5, -55, 77, 27, -13, -107, -12, 10, -91, -47, -67, 86, -24, -31, -90, 86, 41, -45, 117, 38, -71, 47, -65, 23, -85, 53, 77, 67, 90, -41, 53, -127, 41, -108, 70, -9, 74, -15, 78, 117, -122, 117, 93, 92, 101, 100, -87, 120, 97, 89, -16, 44, 74, -116, -79, -86, 42, 14, -50, 10, -5, -35, 46, 42, 4, -90, 80, -118, 25, -87, 20, 118, 105, 103, 66, -51, 22, -11, -17, 41, 89, 71, -112, -123, 66, -34, 117, -35, -16, 23, 92, -54, 34, 35, 30, 113, -82, -49, 86, 90, -48, 104, 116, -49, 21, 86, -7, -81, 55, 91, -102, 103, -110, -69, 108, -52, 117, -112, -22, 32, -92, -37, 37, 77, -18, -39, -37, -116, -57, -1, -119, -126, 41, 60, -34, -126, 9, 51, -27, -26, 14, 33, 120, 99, 83, 81, 44, -16, 9, 11, -118, -40, -53, -35, 44, 23, 10, 92, 79, -18, -87, 114, 58, -1, -8, 78, -90, 25, -33, 9, 85, 83, 100, -94, -8, 12, -35, -1, -27, -32, 23, 100, 54, 121, 85, -40, -64, -61, 88, -105, -29, 78, -43, 108, -14, -110, -15, -63, 120, 0, -35, 61, 87, -107, 8, 107, 72, 12, 65, 95, 37, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	}

	private static byte[] getS9(){
		return new byte[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 15, 0, 0, 0, 20, 8, 2, 0, 0, 0, -35, -91, -16, 69, 0, 0, 1, 69, 73, 68, 65, 84, 120, -38, 117, -109, -65, 78, -61, 48, 16, -121, -17, -27, -86, 12, 25, 50, 120, -88, -104, 24, -103, 58, 116, -88, -94, 44, 76, 44, 72, -27, 33, -54, 51, -28, 29, -78, -62, 11, -64, 66, -39, -40, 34, 64, -32, -56, 124, -11, -39, 23, -89, -64, -89, -56, -67, -100, 127, -9, -57, -25, 84, 110, 11, -18, -10, -5, 97, 24, -114, 111, -81, 33, 4, 86, 108, 60, -91, 64, 110, 50, 108, 124, -7, 111, 116, -45, 20, 78, 120, -113, 65, 12, 126, -45, -52, -22, -25, -29, 83, -8, 5, 1, 84, -104, -43, -41, -111, -5, -61, -63, 20, -29, 56, 18, -7, -2, -7, 97, 30, -46, -85, 44, -87, 73, -96, 27, -108, 38, 71, -41, 117, -84, 122, 0, -24, -5, 30, -49, 73, -35, -74, 45, -106, 109, -112, -90, -117, -32, -73, -126, -28, 82, -113, -20, 34, -23, 100, 33, -20, -106, 104, -21, 52, -90, -81, -78, -115, 88, -117, -37, 37, 118, 18, 125, -107, 77, -60, -44, 12, 117, -109, -63, 54, -65, 122, -28, 42, -14, -8, -14, -96, -51, 80, -108, 28, 120, -88, 107, 78, 80, 89, 82, 115, -22, 114, -126, -24, 88, 77, 58, -85, 47, 35, 100, 98, -69, -68, -108, 82, 10, 42, 75, 106, 96, 94, -45, 82, 98, -15, -52, 55, -87, -41, 23, 107, 123, -72, 17, -69, 38, 122, 99, -10, 106, -45, -104, 10, -60, 57, -57, -113, -82, 103, -113, -34, 14, -11, -120, 116, 17, 113, 25, -99, 3, 70, -45, 52, -22, 73, 117, -68, 39, 44, -87, -101, 12, 9, 104, -108, 25, 99, -109, -72, -100, 18, -119, -22, -70, -58, 47, 117, -124, 19, -124, 127, -96, 66, 85, 85, 42, 19, -75, -54, 47, -10, 12, -82, -80, -54, -56, 42, 66, -107, 63, -1, 13, -116, 101, 85, -16, 3, -30, -40, 97, -94, -55, -35, 0, -10, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	}

	private static byte[] getST(){
		return new byte[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 15, 0, 0, 0, 20, 8, 2, 0, 0, 0, -35, -91, -16, 69, 0, 0, 1, 91, 73, 68, 65, 84, 120, -38, 101, -110, 49, 78, -61, 64, 16, 69, -25, 106, 46, 44, 23, 20, 20, 46, 34, 42, -105, -87, 92, -72, -120, 34, 55, 84, 52, -106, -62, 33, -62, 25, 124, 7, -73, 112, 1, 104, 72, 58, 20, 9, 89, 64, 17, 107, 121, -34, 31, -113, 22, -14, -75, -78, -2, -52, -68, 93, -17, -50, -82, 117, 93, -9, -72, -37, 13, -61, 48, 77, 83, 8, -95, 75, 68, -14, -21, -25, -101, -127, -127, 33, 99, -72, 113, 28, -123, -94, -121, 69, 47, -17, -49, 75, 110, 22, 33, 73, 123, 59, -68, -122, 68, 66, -5, -66, 79, 81, 60, -125, -92, 49, 41, -91, -17, -93, 14, 31, -57, -16, 87, -48, 36, 77, -53, -100, 62, 79, 78, -77, 69, 45, 76, -103, -1, 16, -86, 74, -46, -98, -10, 123, -74, -49, 28, -47, 109, -37, -54, 83, -93, -76, -35, 110, -107, -47, 124, 107, -102, 102, -77, -39, 56, -115, -25, -36, 24, -114, -82, 18, -62, -48, -103, 11, -115, -100, -58, 115, 110, 86, -30, -37, 44, -86, -21, 122, 110, -58, -7, 108, 117, -108, -45, 120, -74, -85, 14, -44, -119, -30, 102, 38, 91, 71, 57, -115, -105, 33, -77, 78, -92, -83, -49, 116, 85, 85, -41, 52, 71, 116, -44, 1, -61, 17, 83, -45, 117, 18, -86, 33, -108, -85, 69, 23, 32, 76, 51, -67, -70, 91, -7, -38, -124, 116, 67, 107, 59, -19, -128, -31, 24, -44, 68, -29, -11, 66, -8, -86, -92, -95, -74, -2, -89, -53, -78, -116, -17, 113, -18, 55, 121, 66, 1, -12, 123, 62, 101, 25, -107, -46, -14, -44, -72, 115, 85, 121, 14, -86, -38, 109, -108, -45, 120, -82, 67, -98, -58, 115, 62, 22, -10, 119, 106, 55, 81, 78, 43, -44, 117, -22, 109, -72, 33, 105, 69, 81, -28, 121, -18, 116, 17, -59, 30, -62, -107, 72, 26, 104, -106, 101, 78, -25, 81, 76, 80, 19, 92, -124, -28, 127, 1, -61, 100, -124, -35, -110, 58, 89, 72, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	}

	private static byte[] getSJ(){
		return new byte[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 15, 0, 0, 0, 20, 8, 2, 0, 0, 0, -35, -91, -16, 69, 0, 0, 0, -61, 73, 68, 65, 84, 120, -38, -107, -110, -67, 10, -62, 48, 20, -123, -17, -53, -107, 14, 29, 50, 100, 40, 78, -114, 78, 14, 14, 34, 89, -100, 92, -124, -6, 16, -11, 101, -14, 22, 58, -43, -51, 45, 99, 75, 61, 105, -56, -63, 31, 46, -110, -113, 112, 75, 78, -66, -101, -122, 54, 114, -42, -103, 51, 76, -28, -92, 67, -101, 73, -95, 125, -44, -95, -51, -92, -48, 62, 40, 56, -25, 104, 51, -108, -67, 14, 109, 38, -78, -45, -95, -51, 68, -74, 58, -76, -103, -56, 70, -121, 54, -109, 66, 123, -83, 67, -101, 73, -95, -35, -82, 90, 109, -48, 102, -14, 97, -93, -5, -113, 109, -116, -79, -42, -94, 66, -67, 15, 55, -44, 52, -67, 116, 93, 82, -121, -25, 35, 37, -88, -47, 78, 92, -5, 126, -102, -30, 26, -18, 49, -82, 4, 58, 49, 5, -34, 123, 58, -46, 44, -16, 95, 36, 35, 50, -114, -23, -119, 93, -102, -116, -44, 11, 56, 64, 8, 97, -2, 1, 33, -106, -22, -116, 84, 25, 124, -4, -81, 6, -68, 7, 27, 87, 111, -68, 0, 76, 82, -3, 43, -72, 103, -2, 12, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	}

	private static byte[] getSQ(){
		return new byte[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 15, 0, 0, 0, 20, 8, 2, 0, 0, 0, -35, -91, -16, 69, 0, 0, 1, 62, 73, 68, 65, 84, 120, -38, 125, -110, -79, 78, -61, 64, 12, -122, -3, 114, 21, 67, -121, 14, 25, 42, -90, -116, -103, 50, 48, 68, 81, 22, 38, 22, -92, -14, 16, -27, 25, -14, 14, 89, -31, 5, 96, -95, 108, 85, 37, 20, 1, 69, 57, -123, -17, -50, -115, 115, 81, 8, -65, -94, -24, -50, -2, 109, -1, -10, 89, -18, -89, -88, -21, -6, 112, 124, -17, 3, -98, -33, -98, -72, -58, 94, -71, 27, -16, -80, -37, 41, -49, -71, 94, -1, -2, -48, 117, 77, -45, 24, 103, 100, -65, 30, 94, -6, 5, 88, -128, -36, 6, 80, -15, -110, 108, 1, 84, -122, -26, -39, 85, 85, -99, 62, 78, 106, -3, -4, -2, 122, -36, -17, 49, -110, -119, 20, 113, 122, -49, -122, 74, -100, 81, 57, 87, 17, 44, 0, 87, 89, -106, 82, 20, -123, -102, -100, 115, 36, -64, 84, 76, -95, 101, -15, 82, 83, -14, 60, -73, -2, -104, -47, -51, 12, -106, -98, -125, 103, 51, 56, -6, 107, -37, 54, -1, 11, -92, 48, -23, -110, 101, -103, -67, 69, -74, 0, 35, 12, -20, -82, -101, -77, 17, 58, -78, 3, 65, -46, 52, -27, 124, -2, 113, -88, 79, 35, 48, 28, 58, 67, -122, 18, 46, 74, -72, -104, -18, -104, -83, 91, -128, 113, -94, 123, 123, -67, -91, 4, -123, 8, 96, -64, 92, -7, -48, 96, -17, 98, 75, -26, 39, -104, 36, -119, -7, -104, 17, 84, 44, -28, -98, -81, -115, -33, 19, 124, 60, -87, -103, 120, -114, 36, -128, -26, -112, 17, -77, 73, 33, -101, 0, 43, 7, -125, -2, -44, 24, -17, 9, -91, -80, -56, 58, -64, 86, 101, 9, 116, -27, 117, 95, 13, -8, 103, -65, -57, -103, -84, 6, 80, 97, 30, 64, 74, 72, -86, -109, -123, -5, 5, 97, -108, -117, -17, 53, 44, -31, 47, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	}

	private static byte[] getSK(){
		return new byte[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 15, 0, 0, 0, 20, 8, 2, 0, 0, 0, -35, -91, -16, 69, 0, 0, 1, 21, 73, 68, 65, 84, 120, -38, 125, -110, 49, -114, -62, 48, 16, 69, -25, 114, -120, -126, 34, 69, 10, 68, 69, 73, -27, -126, 2, 69, 105, 92, -47, 32, -63, 33, -32, 12, -71, 67, 110, 1, 21, 116, 43, -92, 85, 4, 52, 86, -8, 25, -109, -49, 24, -78, -5, -108, -62, -2, 126, -52, 76, -126, 101, -93, -76, 61, -101, -108, -70, -82, 121, 116, -40, -17, 101, -83, 48, 90, 27, 112, -52, 28, 63, 67, -14, -97, 125, -2, -71, -60, -16, 116, 62, 122, -17, 59, -37, 43, -76, 125, 79, 85, 85, 118, -122, 24, 14, -37, -69, -19, -10, -10, -72, 115, -122, -78, 44, 95, 118, 81, 20, -40, -48, -114, 91, -76, 14, -95, -37, 94, 127, -81, -112, -112, 20, -118, -84, 20, -38, 88, -93, 111, 84, 67, 8, 88, -81, 12, -78, 84, 104, -93, -116, -99, -63, 57, -73, 52, -120, 83, 104, -13, -27, -102, -90, 65, 107, -105, 34, 11, -91, -3, 2, 54, 90, 47, 82, -2, -76, 49, 52, -6, 124, -38, 115, -91, 29, 2, 31, 4, -35, -25, -122, 1, -37, -2, -31, 88, 39, -10, 116, 54, -59, 99, -17, 3, 82, -5, -82, 24, 32, 58, 120, 62, 109, -88, -40, -38, -81, -124, -14, 111, 59, -53, -78, 60, -49, 121, -106, -9, -16, -82, -94, 60, 74, 68, -83, -77, 1, -19, -84, -57, 94, 30, -108, -113, -95, 76, 20, 30, 76, 12, -74, 60, -58, 64, 34, 99, -123, -10, -40, -64, -37, 22, 47, 12, 18, 25, 41, -76, 71, 41, -74, 60, 38, 121, 2, 58, -21, 95, 118, -77, 75, -86, 8, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	}

	private static byte[] getSA(){
		return new byte[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 15, 0, 0, 0, 20, 8, 2, 0, 0, 0, -35, -91, -16, 69, 0, 0, 1, 23, 73, 68, 65, 84, 120, -38, 125, -110, -67, 78, -61, 48, 20, -123, -17, -53, 85, 12, 25, 50, 100, -88, 58, 117, 100, -22, -64, -128, 80, 22, -90, 46, 72, -27, 33, -38, 103, -56, 59, 100, 45, 47, 0, 11, -52, -107, 80, 4, 8, 82, -63, -25, -34, -8, -56, 54, 85, -113, 50, -36, -97, 47, -10, -71, -74, -19, 33, -41, -29, 102, -13, 27, 69, 92, 116, 109, -99, -85, -21, 58, -47, -60, 69, -73, -92, -5, -66, 23, 77, 92, -46, -9, -71, 62, -66, 62, 69, 19, 23, -35, -116, 78, 77, -53, 122, 70, -33, 69, -75, 109, -101, -102, -106, 117, -22, 98, -20, 54, -47, -53, -37, -77, 28, 123, 64, 37, 5, -20, 38, -118, 33, 82, 3, -118, -87, -117, -79, 85, -44, 110, -69, -43, 122, -92, -121, -9, -125, -89, -44, -59, -40, -11, 73, 68, -66, -5, -15, 24, -68, 82, -47, 12, -44, -23, 58, 54, -47, -56, -49, 14, 26, 27, -92, -38, 106, 24, 6, 49, -74, 60, -119, 91, -107, 81, -81, -48, -29, 79, -115, -31, -59, -119, -42, -66, 79, -81, -5, 101, -108, -114, -120, -18, 68, -49, 23, 115, 62, 111, -124, -59, -58, 81, 75, 42, -96, -21, 88, -96, 25, 66, -115, -77, -94, 11, 19, -24, -70, -82, 53, -48, 5, 97, -67, 105, -102, 64, 115, 70, -33, -29, -49, 101, 26, 6, -46, -86, -86, -46, 69, 112, 109, 85, 46, 93, 42, -25, 72, 26, 94, -107, -14, -85, 127, 98, 119, 45, -49, -13, 50, -103, -26, -104, 102, -25, -92, 23, 6, -7, 7, -33, 3, 103, 74, 58, 104, 60, -27, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
	}
}